

&НаКлиенте
Процедура Печать(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
		
	
	АдресВоВременномХранилище = ПолучитьДанныеПечати(ОбъектыНазначенияМассив);
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);

	//Инициализация Word
	Попытка	
		
		
		ОбъектWORD = Новый COMОбъект("Word.Application");
				
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Word";
		СообщениеПользователю.Сообщить();
		
		ОбъектWORD = Неопределено;
		
		Возврат;
	КонецПопытки;
	
	
	//Заполнение шаблонов
	Для каждого КлючИЗначение Из  СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		
		Попытка
			
			ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".dotx");

			СтруктураДанных.МакетУведомление.Записать(ИмяВременногоФайла_Word); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
			
			ПечатнаяФорма.Activate();

			//
			ЗаполнениеШаблонаWord(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	
			
			
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			ОбъектWORD.Quit();
			ОбъектWORD = Неопределено;
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла; 
	
	
	
	
	ОбъектWORD.Visible  = Истина;
	ОбъектWORD 			= Неопределено;

КонецПроцедуры

#Область ПроцедурыПечати

&НаКлиенте
Процедура ЗаполнениеШаблонаWord(ДанныеОбъекта,ДанныеИнспектора,ПечатнаяФорма)

	СтруктураТаблиц =  СтруктураТаблицПоЗаголовкам(ПечатнаяФорма);
	
	//1. Контактный телефон
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","1_КонтактныйТелефон")];
	ТекстВвода 		 = ДанныеИнспектора.НомерТелефона;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Контактный телефон"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//2.1 Фамилия 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_Фамилия")];
	ТекстВвода 		 = ДанныеОбъекта.Фамилия;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Фамилия"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	
	//2.2 Имя 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_Имя")];
	ТекстВвода 		 = ДанныеОбъекта.Имя;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Имя"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//2.3 Отчество 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_Отчество")];
	ТекстВвода 		 = ДанныеОбъекта.Отчество;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Отчество"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);

	//2.4 Гражданство 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_Гражданство")];
	ТекстВвода 		 = ДанныеОбъекта.Гражданство;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Гражданство"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	
	
	//2.5 Место рождения 
	ТаблицаВорд_1 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_МестоРождения_1")];
	ТаблицаВорд_2 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_МестоРождения_2")];
	ТекстВвода 		 = СокрЛП(СтрЗаменить(Сред(ДанныеОбъекта.МестоРождения,3),","," "));

	НачальнаяКолонка = 2;
	Если ТаблицаВорд_1.Columns.Count +ТаблицаВорд_2.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Место рождения"" меньше текста ввода'"));
	КонецЕсли;
	
	ЧислоСимволов = ТаблицаВорд_1.Columns.Count - НачальнаяКолонка + 1;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_1,Лев(ТекстВвода,ЧислоСимволов),НачальнаяКолонка,2);
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_2,Сред(ТекстВвода,ЧислоСимволов+1),1);

	
	//2.6 Дата рождения 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ДатаРождения")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ДатаРождения);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата рождения"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	

	 //2.7.1 Данные паспорта  Серия
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ДанныеПаспорта")];
	ТекстВвода 		 = ДанныеОбъекта.Серия;
	НачальнаяКолонка = 2;
	Если 7 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Серия паспорта"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	

	
	//2.7.2 Данные паспорта  Номер
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ДанныеПаспорта")];
	ТекстВвода 		 = ДанныеОбъекта.Номер;
	НачальнаяКолонка = 10;
	Если 9 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Номер паспорта"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//2.7.3 Данные паспорта  Дата выдачи
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ПаспортДатаВыдачи")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ДатаВыдачи);
	НачальнаяКолонка = 2;
	//Если 9 < СтрДлина(ТекстВвода) Тогда 
	//	ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Номер паспорта"" меньше текста ввода'"));
	//КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	

	//2.8 Кем выдан 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ПаспортВыдан")];
	ТекстВвода 		 = СокрЛП(ДанныеОбъекта.КемВыдан);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (СтрШаблон(НСтр("ru = 'Длина таблицы ""Кем выдан"" меньше ""%1""'"),ТекстВвода));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
		
	//2.9 Номер карты 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_НомерКарты")];
	ТекстВвода 		 = СтрШаблон("%1 %2",ДанныеОбъекта.МиграционнаяКартаСерия,ДанныеОбъекта.МиграционнаяКартаНомер);
	ПроверкаНаПробелыНули(ТекстВвода);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Номер карты"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);

	//2.10 Дата карты 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ДатаКарты")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.МиграционнаяКартаДатаВыдачи);
	НачальнаяКолонка = 2;
	//Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
	//	ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата карты"" меньше текста ввода'"));
	//КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//2.11.1 Адрес учета
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_АдресУчета_1")];
	ТекстВвода 		 = "Дмитровский";
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Адрес учета 1"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);

	//2.11.2 Адрес учета
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_АдресУчета_2")];
	ТекстВвода 		 = "район Рогачево ул Советская вл 36";
	НачальнаяКолонка = 1;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Адрес учета 2"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//2.11.3 Адрес учета
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_АдресУчета_3")];
	ТекстВвода 		 = "стр 9б";
	НачальнаяКолонка = 1;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Адрес учета 2"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

		
	//2.12 Дата регистрации 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_ДатаУчета")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ДатаРегистрации);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата регистрации"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	

	//3.1 Серия патента 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_ДанныеПатента")];
	ТекстВвода 		 = ДанныеОбъекта.ПатентСерия;
	НачальнаяКолонка = 2;
	Если 9 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Серия патента"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//3.2 Символ № 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_ДанныеПатента")];
	ТекстВвода 		 = "№";
	НачальнаяКолонка = 14;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//3.2 Номер патента 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_ДанныеПатента")];
	ТекстВвода 		 = ДанныеОбъекта.ПатентНомер;
	НачальнаяКолонка = 15;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Номер патента"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//3.3 Дата патента 
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_ДатаПатента")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ПатентДатаВыдачи);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата патента"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//3.4.1 Патент срок действия
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_СрокДействияПатента")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ПатентСрокС);
	НачальнаяКолонка = 2;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Срок действия 1"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//3.4.2 Патент срок действия
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_СрокДействияПатента")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ПатентСрокПо);
	НачальнаяКолонка = 13;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Срок действия 2"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//3.5 Профессия 
	ТаблицаВорд_1 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_Профессия_1")];
	ТекстВвода 		 = ДанныеОбъекта.Должность;
	НачальнаяКолонка = 1;
	Если ТаблицаВорд_1.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Профессия"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_1,Лев(ТекстВвода,ЧислоСимволов),НачальнаяКолонка);
	
	//3.6 Дата увольнения
	ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","3_ДатаУволнения")];
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ДатаУвольнения);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата увольнения"" меньше текста ввода'"));
	КонецЕсли;
	
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	
	
	////3.7.1 Адрес деятельности
	//ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_АдресДеятельности_1")];
	//ТекстВвода 		 = "Дмитровский район";
	//НачальнаяКолонка = 2;
	//Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
	//	ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Адрес деятельности 1"" меньше текста ввода'"));
	//КонецЕсли;
	//
	//ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);

	////3.7.2 Адрес деятельности
	//ТаблицаВорд 	 = СтруктураТаблиц[СтрЗаменить("У%1","%1","2_АдресДеятельности_2")];
	//ТекстВвода 		 = "Рогачево ул Советская вл 36 стр9б";
	//НачальнаяКолонка = 1;
	//Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
	//	ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Адрес деятельности 2"" меньше текста ввода'"));
	//КонецЕсли;

	//ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	
	
	ФИОИнспектора =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2.%3.",
				ДанныеИнспектора.Фамилия,
				Лев(ДанныеИнспектора.Имя,1),
				Лев(ДанныеИнспектора.Отчество,1)); 
				
	//Замена параметров
	Замена = ПечатнаяФорма.Content.Find;
	Замена.Execute("[ДолжностьИнспектора]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.Должность, 2);
	Замена.Execute("[ФамилияИнспектора]", Ложь, Истина, Ложь, , , Истина, , Ложь, ФИОИнспектора, 2);
	Замена.Execute("[ФИОИнспектора]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.ФИО, 2);
	
	Замена.Execute("[Серия]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.Серия, 2);
	Замена.Execute("[Номер]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.Номер, 2);
	Замена.Execute("[Выдан]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.КемВыдан, 2);
	
	Замена.Execute("{}", Ложь, Истина, Ложь, , , Истина, , Ложь, Формат(День(ДанныеИнспектора.ДатаВыдачи),"ЧЦ=2; ЧГ=0; ЧВН="), 2);
	Замена.Execute("{месяц}", Ложь, Истина, Ложь, , , Истина, , Ложь, ПолучитьМесяцПрописью(ДанныеИнспектора.ДатаВыдачи), 2);
	Замена.Execute("{год}", Ложь, Истина, Ложь, , , Истина, , Ложь, Формат(Год(ДанныеИнспектора.ДатаВыдачи),"ЧЦ=4; ЧГ=0; ЧВН="), 2);
	
	
	Замена.Execute("[ДНомер]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.ДНомер, 2);
	Замена.Execute("[Д]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.ДДата, 2);
	
	Замена.Execute("[ДМесяц]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.ДМесяц, 2);
	Замена.Execute("[Г]", Ложь, Истина, Ложь, , , Истина, , Ложь, ДанныеИнспектора.ДГод, 2);
		

КонецПроцедуры // ЗаполнениеШаблонаWord()

&НаСервереБезКонтекста
Процедура ПроверкаНаПробелыНули(СтрокаТекста)

	МассивЗнаков = Новый Массив;
	Счетчик 		= 1;
	ДлинаСтроки 	= СтрДлина(СтрокаТекста);
	Пока Счетчик <= ДлинаСтроки Цикл
		
		МассивЗнаков.Добавить(Сред(СтрокаТекста,Счетчик,1));
		
		Счетчик 		= Счетчик + 1;
	КонецЦикла; 
	
	МассивЦифр = СтрРазделить("1,2,3,4,5,6,7,8,9",",");
	Для каждого Цифра Из МассивЦифр Цикл
	
		Если Не МассивЗнаков.Найти(Цифра) = Неопределено Тогда
		
			  Возврат
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	СтрокаТекста = "";

КонецПроцедуры // ПроверкаНаПробелыНули()


&НаСервере
Функция ПолучитьДанныеПечати(МассивДокументов) 

	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли; 
	
	
	РезультатЗапросаПоВсемПечатаемымДокументам = ПолучитьДанныеДокументов(МассивДокументов);
		
	ВыборкаДетальныеЗаписи = РезультатЗапросаПоВсемПечатаемымДокументам.Выбрать();
	
	
	СоответствиеДанныеОбъектов = Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураВозврата = Новый Структура;	
		Для каждого Колонка Из РезультатЗапросаПоВсемПечатаемымДокументам.Колонки Цикл
			СтруктураВозврата.Вставить(Колонка.Имя)
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(СтруктураВозврата,ВыборкаДетальныеЗаписи);
		
		СоответствиеДанныеОбъектов.Вставить(ВыборкаДетальныеЗаписи.ФизическоеЛицо,СтруктураВозврата);
		
	
	КонецЦикла; 

		
	Возврат ПоместитьВоВременноеХранилище(Новый Структура("СоответствиеДанныеОбъектов, МакетУведомление, ДанныеИнспектораПоКадрам", 
					СоответствиеДанныеОбъектов,
					РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетWord"),
					ДанныеИнспектораПоКадрам()));

КонецФункции
				
&НаСервереБезКонтекста
Функция ПолучитьДанныеДокументов(МассивДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);

	Запрос.Текст = "ВЫБРАТЬ
	|	Увольнение.Ссылка КАК Ссылка,
	|	Увольнение.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Увольнение.ДатаУвольнения КАК ДатаУвольнения,
	|	Увольнение.Сотрудник КАК Сотрудник,
	|	Увольнение.Организация КАК Организация,
	|	0 КАК НомерСтроки
	|ПОМЕСТИТЬ ДанныеДокументовУвольнение
	|ИЗ
	|	Документ.Увольнение КАК Увольнение
	|ГДЕ
	|	Увольнение.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УвольнениеСписком.Ссылка,
	|	УвольнениеСпискомСотрудники.ФизическоеЛицо,
	|	УвольнениеСпискомСотрудники.ДатаУвольнения,
	|	УвольнениеСпискомСотрудники.Сотрудник,
	|	УвольнениеСписком.Организация,
	|	УвольнениеСпискомСотрудники.НомерСтроки
	|ИЗ
	|	Документ.УвольнениеСписком.Сотрудники КАК УвольнениеСпискомСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УвольнениеСписком КАК УвольнениеСписком
	|		ПО УвольнениеСпискомСотрудники.Ссылка = УвольнениеСписком.Ссылка
	|ГДЕ
	|	УвольнениеСпискомСотрудники.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КадроваяИсторияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(КадроваяИсторияСотрудниковСрезПоследних.Должность) КАК Должность
	|ПОМЕСТИТЬ ВременнаяТаблицаДолжностиСотрудников
	|ИЗ
	|	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
	|			,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					ДанныеДокументовУвольнение.Сотрудник
	|				ИЗ
	|					ДанныеДокументовУвольнение КАК ДанныеДокументовУвольнение)) КАК КадроваяИсторияСотрудниковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГражданствоФизическихЛицСрезПоследних.Страна КАК Страна,
	|	ГражданствоФизическихЛицСрезПоследних.ИНН КАК ИНН,
	|	СтраныМира.НаименованиеПолное КАК НаименованиеПолноеСтрана
	|ПОМЕСТИТЬ ВременнаяТаблицаГражданство
	|ИЗ
	|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ГражданствоФизическихЛицСрезПоследних.Страна = СтраныМира.Ссылка
	|ГДЕ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовУвольнение.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовУвольнение КАК ДанныеДокументовУвольнение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеИностранца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеИностранца.РазрешениеСерия КАК РазрешениеСерия,
	|	ДанныеИностранца.РазрешениеНомер КАК РазрешениеНомер,
	|	ДанныеИностранца.РазрешениеДатаВыдачи КАК РазрешениеДатаВыдачи,
	|	ДанныеИностранца.РазрешениеДействительноДо КАК РазрешениеДействительноДо,
	|	ДанныеИностранца.РазрешениеТерриторияДействия КАК РазрешениеТерриторияДействия,
	|	ДанныеИностранца.РазрешениеКемВыдано КАК РазрешениеКемВыдано,
	|	ДанныеИностранца.РазрешениеДатаПостановкиНаМиграционныйУчет КАК РазрешениеДатаПостановкиНаМиграционныйУчет,
	|	ДанныеИностранца.РазрешениеКтоПоставилНаУчет КАК РазрешениеКтоПоставилНаУчет,
	|	ДанныеИностранца.МиграционнаяКартаСерия КАК МиграционнаяКартаСерия,
	|	ДанныеИностранца.МиграционнаяКартаНомер КАК МиграционнаяКартаНомер,
	|	ДанныеИностранца.МиграционнаяКартаДатаВыдачи КАК МиграционнаяКартаДатаВыдачи,
	|	ДанныеИностранца.ПатентСерия КАК ПатентСерия,
	|	ДанныеИностранца.ПатентНомер КАК ПатентНомер,
	|	ДанныеИностранца.ПатентДатаВыдачи КАК ПатентДатаВыдачи,
	|	ДанныеИностранца.ПатентСрокС КАК ПатентСрокС,
	|	ДанныеИностранца.ПатентСрокПо КАК ПатентСрокПо,
	|	ДанныеИностранца.ПатентНаименование КАК ПатентНаименование,
	|	ДанныеИностранца.ПатентКемВыдан КАК ПатентКемВыдан
	|ПОМЕСТИТЬ ВременнаяТаблицаРазрешенияПатенты
	|ИЗ
	|	РегистрСведений.Монолит_ДанныеИностранца КАК ДанныеИностранца
	|ГДЕ
	|	ДанныеИностранца.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовУвольнение.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовУвольнение КАК ДанныеДокументовУвольнение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Монолит_УведомленияИностранцев.ПриказОрганизации КАК ПриказОрганизации,
	|	Монолит_УведомленияИностранцев.ГосударственнаяОрганизация КАК ГосударственнаяОрганизация,
	|	Монолит_УведомленияИностранцев.ДатаУведомления КАК ДатаУведомления
	|ПОМЕСТИТЬ ВременнаяТаблицаУведомления
	|ИЗ
	|	РегистрСведений.Монолит_УведомленияИностранцев КАК Монолит_УведомленияИностранцев
	|ГДЕ
	|	Монолит_УведомленияИностранцев.ПриказОрганизации В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК Ссылка,
	|	ФизическиеЛица.МестоРождения КАК МестоРождения,
	|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
	|	ФизическиеЛица.Пол КАК Пол,
	|	ФизическиеЛица.ДатаРегистрации КАК ДатаРегистрации,
	|	ФизическиеЛица.ФИО КАК ФИО,
	|	ФизическиеЛица.Фамилия КАК Фамилия,
	|	ФизическиеЛица.Отчество КАК Отчество,
	|	ФизическиеЛица.Имя КАК Имя
	|ПОМЕСТИТЬ ВременнаяТаблицаДанныеФизическогоЛица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовУвольнение.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовУвольнение КАК ДанныеДокументовУвольнение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|	ПРЕДСТАВЛЕНИЕ(ДокументыФизическихЛицСрезПоследних.ВидДокумента) КАК ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения
	|ПОМЕСТИТЬ ВременнаяТаблицаДокументыФизичесткогоЛица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовУвольнение.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовУвольнение КАК ДанныеДокументовУвольнение)
	|	И ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовУвольнение.Ссылка КАК Ссылка,
	|	ДанныеДокументовУвольнение.Организация КАК Организация,
	|	ДанныеДокументовУвольнение.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокументовУвольнение.ДатаУвольнения КАК ДатаУвольнения,
	|	ВременнаяТаблицаДанныеФизическогоЛица.Фамилия КАК Фамилия,
	|	ВременнаяТаблицаДанныеФизическогоЛица.Имя КАК Имя,
	|	ВременнаяТаблицаДанныеФизическогоЛица.Отчество КАК Отчество,
	|	ВременнаяТаблицаГражданство.Страна КАК Страна,
	|	ВременнаяТаблицаГражданство.НаименованиеПолноеСтрана КАК Гражданство,
	|	ВременнаяТаблицаГражданство.ИНН КАК ИННГражданство,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеСерия КАК РазрешениеСерия,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеНомер КАК РазрешениеНомер,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеДатаВыдачи КАК РазрешениеДатаВыдачи,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеДействительноДо КАК РазрешениеДействительноДо,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеТерриторияДействия КАК РазрешениеТерриторияДействия,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеКемВыдано КАК РазрешениеКемВыдано,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеДатаПостановкиНаМиграционныйУчет КАК РазрешениеДатаПостановкиНаМиграционныйУчет,
	|	ВременнаяТаблицаРазрешенияПатенты.РазрешениеКтоПоставилНаУчет КАК РазрешениеКтоПоставилНаУчет,
	|	ВременнаяТаблицаРазрешенияПатенты.МиграционнаяКартаСерия КАК МиграционнаяКартаСерия,
	|	ВременнаяТаблицаРазрешенияПатенты.МиграционнаяКартаНомер КАК МиграционнаяКартаНомер,
	|	ВременнаяТаблицаРазрешенияПатенты.МиграционнаяКартаДатаВыдачи КАК МиграционнаяКартаДатаВыдачи,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентСерия КАК ПатентСерия,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентНомер КАК ПатентНомер,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентДатаВыдачи КАК ПатентДатаВыдачи,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентСрокС КАК ПатентСрокС,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентСрокПо КАК ПатентСрокПо,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентНаименование КАК ПатентНаименование,
	|	ВременнаяТаблицаРазрешенияПатенты.ПатентКемВыдан КАК ПатентКемВыдан,
	|	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаУведомления.ГосударственнаяОрганизация) КАК ОрганВласти,
	|	ВременнаяТаблицаУведомления.ДатаУведомления КАК ДатаУведомления,
	|	ВременнаяТаблицаДанныеФизическогоЛица.МестоРождения КАК МестоРождения,
	|	ВременнаяТаблицаДанныеФизическогоЛица.ДатаРождения КАК ДатаРождения,
	|	ВременнаяТаблицаДанныеФизическогоЛица.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской) КАК ПолМужской,
	|	ВременнаяТаблицаДанныеФизическогоЛица.ДатаРегистрации КАК ДатаРегистрации,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.ВидДокумента КАК ВидДокумента,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.Серия КАК Серия,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.Номер КАК Номер,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.ДатаВыдачи КАК ДатаВыдачи,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.СрокДействия КАК СрокДействия,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.КемВыдан КАК КемВыдан,
	|	ВременнаяТаблицаДокументыФизичесткогоЛица.КодПодразделения КАК КодПодразделения,
	|	ВременнаяТаблицаДолжностиСотрудников.Должность КАК Должность
	|ИЗ
	|	ДанныеДокументовУвольнение КАК ДанныеДокументовУвольнение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаГражданство КАК ВременнаяТаблицаГражданство
	|		ПО ДанныеДокументовУвольнение.ФизическоеЛицо = ВременнаяТаблицаГражданство.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаРазрешенияПатенты КАК ВременнаяТаблицаРазрешенияПатенты
	|		ПО ДанныеДокументовУвольнение.ФизическоеЛицо = ВременнаяТаблицаРазрешенияПатенты.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаУведомления КАК ВременнаяТаблицаУведомления
	|		ПО ДанныеДокументовУвольнение.Ссылка = ВременнаяТаблицаУведомления.ПриказОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДанныеФизическогоЛица КАК ВременнаяТаблицаДанныеФизическогоЛица
	|		ПО ДанныеДокументовУвольнение.ФизическоеЛицо = ВременнаяТаблицаДанныеФизическогоЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыФизичесткогоЛица КАК ВременнаяТаблицаДокументыФизичесткогоЛица
	|		ПО ДанныеДокументовУвольнение.ФизическоеЛицо = ВременнаяТаблицаДокументыФизичесткогоЛица.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДолжностиСотрудников КАК ВременнаяТаблицаДолжностиСотрудников
	|		ПО ДанныеДокументовУвольнение.Сотрудник = ВременнаяТаблицаДолжностиСотрудников.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДанныеДокументовУвольнение.НомерСтроки";

	

	Возврат Запрос.Выполнить();

КонецФункции 
 
&НаСервереБезКонтекста
Функция ДанныеИнспектораПоКадрам()

	  Запрос = Новый Запрос;
	  Запрос.УстановитьПараметр("Пользователь",Пользователи.ТекущийПользователь());
	  Запрос.УстановитьПараметр("ВидДокумента",Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	  Запрос.УстановитьПараметр("Организация",Справочники.Монолит_ЗначенияСсылокСправочников.ОрганизацияМонолитстрой.ЗначениеСсылки);
	  
	  Запрос.Текст = "ВЫБРАТЬ
	  |	Пользователи.Ссылка КАК Ссылка,
	  |	Пользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |ПОМЕСТИТЬ ВременнаяТаблицаСправочникПользователи
	  |ИЗ
	  |	Справочник.Пользователи КАК Пользователи
	  |ГДЕ
	  |	Пользователи.Ссылка = &Пользователь
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ФизическоеЛицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ФизическиеЛица.Ссылка КАК Ссылка,
	  |	ФизическиеЛица.Фамилия КАК Фамилия,
	  |	ФизическиеЛица.Имя КАК Имя,
	  |	ФизическиеЛица.Отчество КАК Отчество,
	  |	ФизическиеЛица.ФИО КАК ФИО
	  |ПОМЕСТИТЬ ВременнаяТаблицаДанныеФизЛица
	  |ИЗ
	  |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	  |ГДЕ
	  |	ФизическиеЛица.Ссылка В
	  |			(ВЫБРАТЬ
	  |				ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |			ИЗ
	  |				ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	  |	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
	  |ПОМЕСТИТЬ ВременнаяТаблицаКонтактныйТелефон
	  |ИЗ
	  |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	  |ГДЕ
	  |	ФизическиеЛицаКонтактнаяИнформация.Ссылка В
	  |			(ВЫБРАТЬ
	  |				ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |			ИЗ
	  |				ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	  |	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	  |	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	  |	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	  |	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	  |	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	  |	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	  |	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения,
	  |	ДокументыФизическихЛицСрезПоследних.Представление КАК Представление
	  |ПОМЕСТИТЬ ВременнаяТаблицаДокументыФизическогоЛица
	  |ИЗ
	  |	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	  |			,
	  |			(ВидДокумента, Физлицо) В
	  |				(ВЫБРАТЬ
	  |					&ВидДокумента КАК ВидДокумента,
	  |					ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |				ИЗ
	  |					ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)) КАК ДокументыФизическихЛицСрезПоследних
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Физлицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	  |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность
	  |ПОМЕСТИТЬ ВременнаяТаблицаКадроваяИстория
	  |ИЗ
	  |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
	  |			,
	  |			(ФизическоеЛицо, ГоловнаяОрганизация) В
	  |				(ВЫБРАТЬ
	  |					ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо,
	  |					&Организация КАК Организация
	  |				ИЗ
	  |					ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)) КАК КадроваяИсторияСотрудниковСрезПоследних
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ФизическоеЛицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ВременнаяТаблицаДанныеФизЛица.Фамилия КАК Фамилия,
	  |	ВременнаяТаблицаДанныеФизЛица.Имя КАК Имя,
	  |	ВременнаяТаблицаДанныеФизЛица.Отчество КАК Отчество,
	  |	ВременнаяТаблицаДанныеФизЛица.ФИО КАК ФИО,
	  |	ВременнаяТаблицаКонтактныйТелефон.НомерТелефона КАК НомерТелефона,
	  |	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаДокументыФизическогоЛица.ВидДокумента) КАК ВидДокумента,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Серия КАК Серия,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Номер КАК Номер,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.ДатаВыдачи КАК ДатаВыдачи,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.СрокДействия КАК СрокДействия,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.КемВыдан КАК КемВыдан,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.КодПодразделения КАК КодПодразделения,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Представление КАК ПредставлениеДокумента,
	  |	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаКадроваяИстория.Должность) КАК Должность
	  |ИЗ
	  |	ВременнаяТаблицаДанныеФизЛица КАК ВременнаяТаблицаДанныеФизЛица
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКонтактныйТелефон КАК ВременнаяТаблицаКонтактныйТелефон
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаКонтактныйТелефон.Ссылка
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыФизическогоЛица КАК ВременнаяТаблицаДокументыФизическогоЛица
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаДокументыФизическогоЛица.Физлицо
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКадроваяИстория КАК ВременнаяТаблицаКадроваяИстория
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаКадроваяИстория.ФизическоеЛицо";
	  
	  Результат = Запрос.Выполнить();
	  Выборка =  Результат.Выбрать();

	  СтруктураВозврата = Новый Структура;	
	  Для каждого Колонка Из Результат.Колонки Цикл
		  СтруктураВозврата.Вставить(Колонка.Имя)
	  КонецЦикла;

	  Если Выборка.Следующий() Тогда 
		 		  
		  ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	  Иначе
		  Для каждого КлючИЗначение Из СтруктураВозврата Цикл
		  	    КлючИЗначение.Значение = ""
		  КонецЦикла; 
		  
	  КонецЕсли; 
	  
	  
	  //Данных по доверенности в базе не наю откуда брать
	  СтруктураВозврата.Вставить("ДНомер","");
	  СтруктураВозврата.Вставить("ДДата","");
	  СтруктураВозврата.Вставить("ДМесяц","");
	  СтруктураВозврата.Вставить("ДГод","");
	  //Если исполнитель  Гарова Ю.И. то № 6 от 18 июня 2018
	  Если СтруктураВозврата.Фамилия = "Гарова" Тогда
	  
	  	  СтруктураВозврата.ДНомер = "6";
	  	  СтруктураВозврата.ДДата = "18";
	  	  СтруктураВозврата.ДМесяц = "июня";
	  	  СтруктураВозврата.ДГод = "18";
	  
	  КонецЕсли; 
	   Если СтруктураВозврата.Фамилия = "Ященко" Тогда
	  
	  	  СтруктураВозврата.ДНомер = "5";
	  	  СтруктураВозврата.ДДата = "10";
	  	  СтруктураВозврата.ДМесяц = "января";
	  	  СтруктураВозврата.ДГод = "17";
	  
	  КонецЕсли; 
		  //

	  
	  Возврат СтруктураВозврата;
	  

КонецФункции // ПолучитьДанныеПользователя()

#КонецОбласти 

#Область СлужебныеПроцедуры

&НаКлиенте
Функция ПолучитьМесяцПрописью(ЗначениеДата)
	
	Если Не ТипЗнч(ЗначениеДата) = Тип("Дата") Тогда
		Возврат ""
	КонецЕсли; 
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(1,"января");
	Соответствие.Вставить(2,"февраля");
	Соответствие.Вставить(3,"марта");
	Соответствие.Вставить(4,"апреля");
	Соответствие.Вставить(5,"мая");
	Соответствие.Вставить(6,"июня");
	Соответствие.Вставить(7,"июля");
	Соответствие.Вставить(8,"августа");
	Соответствие.Вставить(9,"сентября");
	Соответствие.Вставить(10,"октября");
	Соответствие.Вставить(11,"ноября");
	Соответствие.Вставить(12,"декабря");

	Возврат Соответствие[Месяц(ЗначениеДата)];	

КонецФункции // ПолучитьМесяцПрописью()

&НаКлиенте
Процедура ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,НомерСтроки = 1)
	Если Не ТипЗнч(ТекстВвода) = Тип("Строка") Тогда
		Возврат 
	КонецЕсли; 

	Если ПустаяСтрока(ТекстВвода) Тогда
		Возврат
	КонецЕсли; 

	Счетчик 		= 1;
	ДлинаСтроки 	= СтрДлина(ТекстВвода);
	КолонкаТаблицы 	= НачальнаяКолонка;
	ПоследняяКолонка = ТаблицаВорд.Columns.Count;
	
	Пока Счетчик <= ДлинаСтроки Цикл
		
		Если КолонкаТаблицы > ПоследняяКолонка Тогда
			Прервать;
		КонецЕсли;

		Ячейка = ТаблицаВорд.Cell(НомерСтроки,КолонкаТаблицы).Range;
		Ячейка.text = ВРег(Сред(ТекстВвода,Счетчик,1));
		
		КолонкаТаблицы = КолонкаТаблицы + 1;
		Счетчик		   = Счетчик + 1;
		
			
	КонецЦикла; 
	

КонецПроцедуры // ЗаполнитьТаблицуТекстом()

&НаКлиенте
Функция СтруктураТаблицПоЗаголовкам(ПечатнаяФорма)
	
	СтруктураТаблиц = Новый Структура;

	Для каждого Таблица Из ПечатнаяФорма.Tables Цикл
		
		Если ПустаяСтрока(Таблица.Title) Тогда
			  Продолжить;
		  КонецЕсли; 
		  
		  СтруктураТаблиц.Вставить(СтрЗаменить("У%1","%1",Таблица.Title),Таблица);
	
		
	  КонецЦикла;
	  
	  Возврат СтруктураТаблиц;

КонецФункции // СтруктураТаблицПоЗаголовкам()

&НаКлиенте
Функция ПреобразоватьДатуВСтрокуВвода(ЗначениеДата)
	
	Если ЗначениеДата = '00010101' Тогда
		Возврат ""
	КонецЕсли; 
	
	Если Не ТипЗнч(ЗначениеДата) = Тип("Дата") Тогда
		Возврат ""
	КонецЕсли; 
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2 %3",
			   Формат(День(ЗначениеДата),"ЧЦ=2; ЧГ=0; ЧВН="),
			   Формат(Месяц(ЗначениеДата),"ЧЦ=2; ЧГ=0; ЧВН="),
			   Формат(Год(ЗначениеДата),"ЧЦ=4; ЧГ=0; ЧВН="));
	
КонецФункции // ПреобразоватьДату()
	
#КонецОбласти 

#Область ТестМакета

&НаКлиенте
Процедура ПрочитатьТаблицы(Команда)
	
	ОбъектWORD = Новый COMОбъект("Word.Application");
	
	ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".dotx");
	
	ПолучитьМакет().Записать(ИмяВременногоФайла_Word); //Двоичные данные
	
	ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
	
	ПечатнаяФорма.Activate();
	
	Для каждого Таблица Из ПечатнаяФорма.Tables Цикл
		
		Если ПустаяСтрока(Таблица.Title) Тогда
			Продолжить;
		КонецЕсли; 
		
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = Таблица.Title;
		СообщениеПользователю.Сообщить();
		
		
	КонецЦикла;
	
	ОбъектWORD.Quit();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет()

	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетWord")

КонецФункции // ПолучитьМакет()


&НаКлиенте
Процедура Тест(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	Печать("ПФ_MXL_УведомлениеОбУвольнении_14",ОбъектыНазначения);
	
КонецПроцедуры

	
#КонецОбласти 




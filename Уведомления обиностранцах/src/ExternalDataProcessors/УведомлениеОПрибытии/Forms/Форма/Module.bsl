//ФОРМИРОВАНИЕ ПЕЧАТНОЙ ФОРМЫ
&НаКлиенте
Процедура Печать(ИдентификаторКоманды, ОбъектыНазначения)  Экспорт 
	
	
	ПараметрКоманды = ОбъектыНазначения;
	МакетИДанныеОбъекта = ЭтаФорма.ПолучитьДанныеПечати(ОбъектыНазначения);
	
	//Инициализация EXCEL
	Попытка	
		ОбъектEXCEL = Новый COMОбъект("Excel.Application");
		
		ИмяВременногоФайла_XLS = ДобавитьКонечныйРазделительПути(КаталогВременныхФайлов()) + УникальныйИдентификатор + ".xls";
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(МакетИДанныеОбъекта.АдресВоВременномХранилише);
		ДвоичныеДанные.Записать(ИмяВременногоФайла_XLS);
		
		ПечатнаяФорма = ОбъектEXCEL.WorkBooks.Open(ИмяВременногоФайла_XLS);
		ПечатнаяФорма.Application.DisplayAlerts = Ложь;
		
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла EXCEL";
		СообщениеПользователю.Сообщить();
		
		ОбъектEXCEL = Неопределено;

		Возврат;
	КонецПопытки;
	
	Если ПечатнаяФорма = Неопределено Тогда
		Возврат
	КонецЕсли;  
	
	 //
	МассивИменКолонок = ПолучитьМассивИменКолонок();
	ДанныеПоВсемОбъектам = МакетИДанныеОбъекта.ДанныеПоВсемОбъектам; //Соотвествие
	
	//Дополняем книгу листами
	ПервыйВход = Истина;
	Для каждого КлючИЗначение Из ДанныеПоВсемОбъектам Цикл
		
		ДобавитьЛистыКнигиВСтруктуру(ПечатнаяФорма,ПервыйВход,КлючИЗначение.Значение);
		
		Если ПервыйВход Тогда
			ПервыйВход = Ложь
		КонецЕсли; 
		
	КонецЦикла; 
	
	//Заполние Листы КНИГИ EXCEL
	Для каждого КлючИЗначение Из ДанныеПоВсемОбъектам Цикл
		ЗаполнитьЛисты(КлючИЗначение,МассивИменКолонок)
	КонецЦикла; 
	
	ПечатнаяФорма.Save();	
	ОбъектEXCEL.Visible  = Истина;
	ОбъектEXCEL = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЛисты(КлючИЗначение,МассивИменКолонок)
	
	СтруктураДанных = КлючИЗначение.Значение;
	
	Лист_1 = СтруктураДанных.Лист_1;
	
#Область ЛИСТ_1
	
	//ФАМИЛИЯ
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"13","W");

	ЗначениеВывода = Врег(СокрЛП(СтруктураДанных.Фамилия));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());

	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 

		
	//ИМЯ  ОТЧЕСТВО
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"15","W");

	ЗначениеВывода = Врег(СокрЛП(СтруктураДанных.Имя)) +?(ПустаяСтрока(СтруктураДанных.Отчество),""," "+ВРег(СокрЛП(СтруктураДанных.Отчество)));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());

	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 


	//гражданство
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"18","AA");
	ЗначениеВывода = Врег(СокрЛП(СтруктураДанных.Гражданство));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 
	
	#Область Дата_Рождения
	
	Если ЗначениеЗаполнено(СтруктураДанных.ДатаРождения)	Тогда
		//рождения день
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"21","AE","AI");
		ЗначениеВывода = Формат(День(СтруктураДанных.ДатаРождения),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//рождения месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"21","AU","AY");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.ДатаРождения),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//рождения год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"21","BG","BS");
		ЗначениеВывода = Формат(Год(СтруктураДанных.ДатаРождения),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
	КонецЕсли;
	
	#КонецОбласти 	
	

	
	//пол
	Если СтруктураДанных.ПолМужской Тогда
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"21","CY","CY");
	Иначе
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"21","DS","DS");
	КонецЕсли;
	ЗначениеВывода = "Х";
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 
	
	//МестоРождения
	//1-я строка
	МассивЯчеек 	= ПолучитьМассивЯчеек(МассивИменКолонок,"24","AE");
	//2-я строка
	МассивЯчеек 	= ПолучитьМассивЯчеек(МассивИменКолонок,"27","AE",,МассивЯчеек);
	МестоРождения = СтрЗаменить(Сред(СтруктураДанных.МестоРождения,3),","," ");
	ЗначениеВывода = Врег(СокрЛП(МестоРождения));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());

	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
				
	КонецЦикла; 

	
	//Серия документа
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"30","DC","DO");
	ЗначениеВывода = ВРег(СокрЛП(СтруктураДанных.Серия));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 

	//Номер документа
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"30","DW");
	ЗначениеВывода = ВРег(СокрЛП(СтруктураДанных.Номер));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 
	
			
	#Область Дата_Выдачи_Документа

	Если  ЗначениеЗаполнено(СтруктураДанных.ДатаВыдачи) Тогда
		//Дата выдачи день
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"32","AA","AE");
		ЗначениеВывода = Формат(День(СтруктураДанных.ДатаВыдачи),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		
		//Дата выдачи месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"32","AQ","AU");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.ДатаВыдачи),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//Дата выдачи год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"32","BC","BO");
		ЗначениеВывода = Формат(Год(СтруктураДанных.ДатаВыдачи),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
	КонецЕсли;

	#КонецОбласти 
	

	#Область Срок_Действия

	Если  ЗначениеЗаполнено(СтруктураДанных.СрокДействия) Тогда
		//Дата выдачи день
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"32","CM","CQ");
		ЗначениеВывода = Формат(День(СтруктураДанных.СрокДействия),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		
		//Дата выдачи месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"32","DC","DG");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.СрокДействия),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//Дата выдачи год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"32","DO","EA");
		ЗначениеВывода = Формат(Год(СтруктураДанных.СрокДействия),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
	КонецЕсли;

	#КонецОбласти 
	

	#Область Дата_Въезда
	
	Если  ЗначениеЗаполнено(СтруктураДанных.ДатаВъезда) Тогда
		//Дата выдачи день
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"47","AI","AM");
		ЗначениеВывода = Формат(День(СтруктураДанных.ДатаВъезда),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		
		//Дата выдачи месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"47","AY","BC");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.ДатаВъезда),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//Дата выдачи год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"47","BK","BW");
		ЗначениеВывода = Формат(Год(СтруктураДанных.ДатаВъезда),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
	КонецЕсли;

	#КонецОбласти 
	

	#Область Срок_Пребывания
	
	Если  ЗначениеЗаполнено(СтруктураДанных.СрокПребывания) Тогда
		//Дата выдачи день
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"47","DO","DS");
		ЗначениеВывода = Формат(День(СтруктураДанных.СрокПребывания),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		
		//Дата выдачи месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"47","EE","EI");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.СрокПребывания),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//Дата выдачи год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"47","EQ","FC");
		ЗначениеВывода = Формат(Год(СтруктураДанных.СрокПребывания),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
	КонецЕсли;

	#КонецОбласти 
	
	
#Область Миграционноя_карта	
	//Серия миграционной карты
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"49","AQ","BC");
	ЗначениеВывода = ВРег(СокрЛП(СтруктураДанных.МиграционнаяКартаСерия));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла;
	
	//Номер миграционной карты
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"49","BK","CI");
	ЗначениеВывода = ВРег(СокрЛП(СтруктураДанных.МиграционнаяКартаНомер));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла;

#КонецОбласти 


	
	
#КонецОбласти 	

#Область Линия_Отреза_Лист_1

	
	//ФАМИЛИЯ
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"69","W");

	ЗначениеВывода = Врег(СокрЛП(СтруктураДанных.Фамилия));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());

	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 

		
	//ИМЯ  ОТЧЕСТВО
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"71","W");

	ЗначениеВывода = Врег(СокрЛП(СтруктураДанных.Имя)) +?(ПустаяСтрока(СтруктураДанных.Отчество),""," "+ВРег(СокрЛП(СтруктураДанных.Отчество)));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());

	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 

	
	//гражданство
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"74","AA");
	ЗначениеВывода = Врег(СокрЛП(СтруктураДанных.Гражданство));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 
	
	#Область Дата_Рождения
	
	Если ЗначениеЗаполнено(СтруктураДанных.ДатаРождения)	Тогда
		//рождения день
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"77","AE","AI");
		ЗначениеВывода = Формат(День(СтруктураДанных.ДатаРождения),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//рождения месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"77","AU","AY");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.ДатаРождения),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//рождения год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"77","BG","BS");
		ЗначениеВывода = Формат(Год(СтруктураДанных.ДатаРождения),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
	КонецЕсли;
	
	#КонецОбласти 	
	
	
	//пол
	Если СтруктураДанных.ПолМужской Тогда
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"77","CY","CY");
	Иначе
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"77","DS","DS");
	КонецЕсли;
	ЗначениеВывода = "Х";
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 
	
	//Серия документа
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"80","DC","DO");
	ЗначениеВывода = ВРег(СокрЛП(СтруктураДанных.Серия));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 

	//Номер документа
	МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"80","DW");
	ЗначениеВывода = ВРег(СокрЛП(СтруктураДанных.Номер));
	
	МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
	Для Индекс = 0 По МаксимальныйИндекс Цикл 	
		
		oRange = Лист_1.Range(МассивЯчеек[Индекс]);
		oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
		
	КонецЦикла; 
	
	
	#Область Срок_Пребывания
	
	Если  ЗначениеЗаполнено(СтруктураДанных.СрокПребывания) Тогда
		//День
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"95","AQ","AU");
		ЗначениеВывода = Формат(День(СтруктураДанных.СрокПребывания),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		
		//Месяц
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"95","BG","BK");
		ЗначениеВывода = Формат(Месяц(СтруктураДанных.СрокПребывания),"ЧЦ=2; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
		
		//Год
		МассивЯчеек = ПолучитьМассивЯчеек(МассивИменКолонок,"95","BS","CE");
		ЗначениеВывода = Формат(Год(СтруктураДанных.СрокПребывания),"ЧЦ=4; ЧГ=0; ЧВН=");
		
		МаксимальныйИндекс = Мин(СтрДлина(ЗначениеВывода) - 1, МассивЯчеек.ВГраница());
		Для Индекс = 0 По МаксимальныйИндекс Цикл 	
			
			oRange = Лист_1.Range(МассивЯчеек[Индекс]);
			oRange.Value  = Сред(ЗначениеВывода, Индекс + 1, 1);
			
		КонецЦикла; 
	КонецЕсли;

	#КонецОбласти 
	

#КонецОбласти 
		
КонецПроцедуры // ЗаполнитьЛисты()

//Возвращает массив имен колонок листа EXCEL 
//каждую третью
//
&НаКлиенте
Функция ПолучитьМассивИменКолонок()

	Массив = Новый Массив;
	
	Массив.Добавить("K");
	Массив.Добавить("O");
	Массив.Добавить("S");
	Массив.Добавить("W");
	
	Массив.Добавить("AA");
	Массив.Добавить("AE");
	Массив.Добавить("AI");
	Массив.Добавить("AM");
	Массив.Добавить("AQ");
	Массив.Добавить("AU");
	Массив.Добавить("AY");
	
	Массив.Добавить("BC");
	Массив.Добавить("BG");
	Массив.Добавить("BK");
	Массив.Добавить("BO");
	Массив.Добавить("BS");
	Массив.Добавить("BW");
	
	Массив.Добавить("CA");
	Массив.Добавить("CE");
	Массив.Добавить("CI");
	Массив.Добавить("CM");
	Массив.Добавить("CQ");
	Массив.Добавить("CU");
	Массив.Добавить("CY");
	
	Массив.Добавить("DC");
	Массив.Добавить("DG");
	Массив.Добавить("DK");
	Массив.Добавить("DO");
	Массив.Добавить("DS");
	Массив.Добавить("DW");
	
	Массив.Добавить("EA");
	Массив.Добавить("EE");
	Массив.Добавить("EI");
	Массив.Добавить("EM");
	Массив.Добавить("EQ");
	Массив.Добавить("EU");
	Массив.Добавить("EY");
	Массив.Добавить("FC");
	
	Возврат Массив;        

КонецФункции // ПолучитьМассивИменКолонок()

//Диапазон ячеек в строке 
//СтрокаЛиста 	- Номер строки в листе EXCEL, тип строка
//
&НаКлиенте
Функция ПолучитьМассивЯчеек(МассивИменКолонок, СтрокаЛиста, КолонкаНачало = "K", КолонкаКонец = "FC",МассивВозврата = Неопределено)
	
	Если МассивВозврата = Неопределено Тогда
		МассивВозврата = Новый Массив
	КонецЕсли; 
		
	НачатьДобавление = Ложь;
	Для каждого ЭлементМассива Из МассивИменКолонок Цикл
	
		Если ЭлементМассива = КолонкаНачало Тогда
			НачатьДобавление = Истина
		КонецЕсли;
		
		Если НачатьДобавление Тогда
			МассивВозврата.Добавить(ЭлементМассива + СтрокаЛиста)
		КонецЕсли; 
		
		Если ЭлементМассива = КолонкаКонец Тогда
			Прервать;
		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат МассивВозврата;
	
КонецФункции // ПолучитьМассивЯчеек()

&НаКлиенте
Функция ДобавитьЛистыКнигиВСтруктуру(КнигаEXCEL,ПервыйЛист,СтруктураДанных)
	
	Если ПервыйЛист Тогда
		
		Лист_1 = КнигаEXCEL.WorkSheets(1);
		//Лист_2 = КнигаEXCEL.WorkSheets(2);
		
	Иначе
		
		КнигаEXCEL.WorkSheets(1).Copy(Null,КнигаEXCEL.WorkSheets(КнигаEXCEL.WorkSheets.Count - 1));
		Лист_1 = КнигаEXCEL.WorkSheets(КнигаEXCEL.WorkSheets.Count - 1);
		
		//КнигаEXCEL.WorkSheets(2).Copy(Null,КнигаEXCEL.WorkSheets(КнигаEXCEL.WorkSheets.Count));
		//Лист_2 = КнигаEXCEL.WorkSheets(КнигаEXCEL.WorkSheets.Count);;
		
	КонецЕсли; 

	СтруктураДанных.Вставить("Лист_1", Лист_1);
	//СтруктураДанных.Вставить("Лист_2", Лист_2);

КонецФункции // ПолучитьСтраницыКниги()

&НаСервере
Функция ПолучитьДанныеПечати(Знач МассивДокументов) Экспорт

	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли; 
	
	
	РезультатЗапросаПоВсемПечатаемымДокументам = ПолучитьДанныеДокументов(МассивДокументов);
		
	ВыборкаДетальныеЗаписи = РезультатЗапросаПоВсемПечатаемымДокументам.Выбрать();
	
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураВозврата = Новый Структура;	
		Для каждого Колонка Из РезультатЗапросаПоВсемПечатаемымДокументам.Колонки Цикл
			СтруктураВозврата.Вставить(Колонка.Имя)
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(СтруктураВозврата,ВыборкаДетальныеЗаписи);
		
		ДанныеПоВсемОбъектам.Вставить(ВыборкаДетальныеЗаписи.ФизическоеЛицо,СтруктураВозврата);
		
	
	КонецЦикла; 

		
	Возврат Новый Структура("ДанныеПоВсемОбъектам, АдресВоВременномХранилише", 
				ДанныеПоВсемОбъектам,
				ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("Объект").ПолучитьМакет("УведомлениеОПрибытии")));

КонецФункции

&НаСервере
Функция ПолучитьДанныеДокументов(МассивДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);
	Запрос.Текст = "ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка,
	|	ФизическиеЛица.ДатаРождения,
	|	ФизическиеЛица.Пол,
	|	ФизическиеЛица.МестоРождения,
	|	ФизическиеЛица.ФИО
	|ПОМЕСТИТЬ Данные_ФизическикихЛиц
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо,
	|	ДокументыФизическихЛицСрезПоследних.ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения
	|ПОМЕСТИТЬ ВременнаяТаблица_ДокументыФизЛиц
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо В
	|			(ВЫБРАТЬ
	|				Данные_ФизическикихЛиц.Ссылка
	|			ИЗ
	|				Данные_ФизическикихЛиц КАК Данные_ФизическикихЛиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо,
	|	СтраныМира.НаименованиеПолное КАК НаименованиеПолноеСтрана
	|ПОМЕСТИТЬ ВременнаяТаблица_Гражданство
	|ИЗ
	|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ГражданствоФизическихЛицСрезПоследних.Страна = СтраныМира.Ссылка
	|ГДЕ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				Данные_ФизическикихЛиц.Ссылка
	|			ИЗ
	|				Данные_ФизическикихЛиц КАК Данные_ФизическикихЛиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Монолит_ДанныеИностранца.ФизическоеЛицо,
	|	Монолит_ДанныеИностранца.ДатаВъезда,
	|	Монолит_ДанныеИностранца.СрокПребывания,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаСерия,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаНомер,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаДатаВыдачи
	|ПОМЕСТИТЬ ВременнаяТаблица_ДанныеИностранца
	|ИЗ
	|	РегистрСведений.Монолит_ДанныеИностранца КАК Монолит_ДанныеИностранца
	|ГДЕ
	|	Монолит_ДанныеИностранца.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				Данные_ФизическикихЛиц.Ссылка
	|			ИЗ
	|				Данные_ФизическикихЛиц КАК Данные_ФизическикихЛиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИОФизическихЛицСрезПоследних.ФизическоеЛицо,
	|	ФИОФизическихЛицСрезПоследних.Фамилия,
	|	ФИОФизическихЛицСрезПоследних.Имя,
	|	ФИОФизическихЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ВременнаяТаблица_ФИО
	|ИЗ
	|	РегистрСведений.ФИОФизическихЛиц.СрезПоследних КАК ФИОФизическихЛицСрезПоследних
	|ГДЕ
	|	ФИОФизическихЛицСрезПоследних.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				Данные_ФизическикихЛиц.Ссылка
	|			ИЗ
	|				Данные_ФизическикихЛиц КАК Данные_ФизическикихЛиц)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные_ФизическикихЛиц.Ссылка КАК ФизическоеЛицо,
	|	Данные_ФизическикихЛиц.ДатаРождения,
	|	Данные_ФизическикихЛиц.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской) КАК ПолМужской,
	|	Данные_ФизическикихЛиц.МестоРождения,
	|	ВременнаяТаблица_ДокументыФизЛиц.ВидДокумента,
	|	ВременнаяТаблица_ДокументыФизЛиц.Серия,
	|	ВременнаяТаблица_ДокументыФизЛиц.Номер,
	|	ВременнаяТаблица_ДокументыФизЛиц.ДатаВыдачи,
	|	ВременнаяТаблица_ДокументыФизЛиц.СрокДействия,
	|	ВременнаяТаблица_ДокументыФизЛиц.КемВыдан,
	|	ВременнаяТаблица_ДокументыФизЛиц.КодПодразделения,
	|	ВременнаяТаблица_Гражданство.НаименованиеПолноеСтрана КАК Гражданство,
	|	ВременнаяТаблица_ДанныеИностранца.ДатаВъезда,
	|	ВременнаяТаблица_ДанныеИностранца.СрокПребывания,
	|	ВременнаяТаблица_ДанныеИностранца.МиграционнаяКартаСерия,
	|	ВременнаяТаблица_ДанныеИностранца.МиграционнаяКартаНомер,
	|	ВременнаяТаблица_ДанныеИностранца.МиграционнаяКартаДатаВыдачи,
	|	ЕСТЬNULL(ВременнаяТаблица_ФИО.Фамилия, """") КАК Фамилия,
	|	ЕСТЬNULL(ВременнаяТаблица_ФИО.Имя, """") КАК Имя,
	|	ЕСТЬNULL(ВременнаяТаблица_ФИО.Отчество, """") КАК Отчество
	|ИЗ
	|	Данные_ФизическикихЛиц КАК Данные_ФизическикихЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ДокументыФизЛиц КАК ВременнаяТаблица_ДокументыФизЛиц
	|		ПО Данные_ФизическикихЛиц.Ссылка = ВременнаяТаблица_ДокументыФизЛиц.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_Гражданство КАК ВременнаяТаблица_Гражданство
	|		ПО Данные_ФизическикихЛиц.Ссылка = ВременнаяТаблица_Гражданство.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ДанныеИностранца КАК ВременнаяТаблица_ДанныеИностранца
	|		ПО Данные_ФизическикихЛиц.Ссылка = ВременнаяТаблица_ДанныеИностранца.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ФИО КАК ВременнаяТаблица_ФИО
	|		ПО Данные_ФизическикихЛиц.Ссылка = ВременнаяТаблица_ФИО.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Данные_ФизическикихЛиц.ФИО";

	

	Возврат Запрос.Выполнить();


КонецФункции 

&НаКлиенте
Процедура ТестПечатнойФормы(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	Печать("УведомлениеОПрибытии",ОбъектыНазначения);
	
	
КонецПроцедуры

&НаКлиенте
Функция ДобавитьКонечныйРазделительПути(Знач ПутьКаталога) 
	Если ПустаяСтрока(ПутьКаталога) Тогда
		Возврат ПутьКаталога;
	КонецЕсли;
	
	ДобавляемыйСимвол = ПолучитьРазделительПути();
	
	Если СтрЗаканчиваетсяНа(ПутьКаталога, ДобавляемыйСимвол) Тогда
		Возврат ПутьКаталога;
	Иначе 
		Возврат ПутьКаталога + ДобавляемыйСимвол;
	КонецЕсли;
КонецФункции


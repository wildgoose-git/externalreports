
#Область ТестовыеКоманды

&НаКлиенте
Процедура ТестоваяПечать(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	
	Печать("ПФ_MXL_УведомлениеОПривлечении_13_XLS",ОбъектыНазначения);

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Печать(ИдентификаторКоманды, ОбъектыНазначения)  Экспорт 
	
	АдресВоВременномХранилище = ПолучитьДанныеПечати(ОбъектыНазначения);
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	//Инициализация Excel
	Попытка	
		ОбъектCOM = Новый COMОбъект("Excel.Application");
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xls");
		СтруктураДанных.МакетУведомление.Записать(ИмяВременногоФайла); //Двоичные данные
		
		ПечатнаяФорма = ОбъектCOM.WorkBooks.Open(ИмяВременногоФайла);
		ПечатнаяФорма.Application.DisplayAlerts = Ложь;
		ПечатнаяФорма.Activate();
		
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Excel";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецПопытки;
	
	//Инициализация Word
	Попытка	
		ОбъектWORD = Новый COMОбъект("Word.Application");
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Word";
		СообщениеПользователю.Сообщить();
		ОбъектWORD = Неопределено;
		Возврат;
	КонецПопытки;

	
	//Добавление пустых листов в книгу по 2 на каждое ФизЛицо
	ПервыйВход = Истина;
	Для каждого КлючИЗначение Из СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		ДобавитьСтраницыВКнигу(ПечатнаяФорма,ПервыйВход,КлючИЗначение.Значение.Фамилия)
	КонецЦикла; 
	
	НетДанных = Истина;
	//Заполнение шаблонов
	Для каждого КлючИЗначение Из  СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		
		Попытка
			

			ЗаполнениеШаблона(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	
			
			НетДанных = Ложь;
			
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			ОбъектCOM.Quit();
			ОбъектCOM = Неопределено;
			
		КонецПопытки;
		
		//Word
		Попытка
			ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".dotx");
			СтруктураДанных.Справка.Записать(ИмяВременногоФайла_Word); 
			ПечатнаяФормаWord = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
			ПечатнаяФормаWord.Activate();

			//
			ЗаполнениеШаблонаWord(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФормаWord);
			
			ПечатнаяФормаWord.Save();	
			
			
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			
			Если Не ОбъектCOM = Неопределено Тогда
				ОбъектCOM.Quit();
				ОбъектCOM = Неопределено;
			КонецЕсли; 
			
		КонецПопытки;

	КонецЦикла; 

	Если НетДанных Тогда
		Если Не ОбъектCOM = Неопределено Тогда
			ОбъектCOM.Quit();
			ОбъектCOM = Неопределено;
		КонецЕсли; 
	Иначе
		ОбъектCOM.Visible  = Истина;
		ОбъектCOM 		   = Неопределено;
	КонецЕсли; 
	
	Если Не ОбъектWORD 	= Неопределено Тогда
		ОбъектWORD.Visible  = Истина;
		ОбъектWORD 			= Неопределено;
	КонецЕсли; 

КонецПроцедуры

#Область Печать

&НаКлиенте
Процедура ЗаполнениеШаблона(ДанныеОбъекта,ДанныеИнспектора,ПечатнаяФорма)

	ЛистОсновной 		= ПечатнаяФорма.WorkSheets(ИмяОсновногоЛиста(ДанныеОбъекта.Фамилия));
	ЛистДополнительнй 	= ПечатнаяФорма.WorkSheets(ИмяДополнительногоЛиста(ДанныеОбъекта.Фамилия));
	
	СтруктураБлоковДопЛиста =  СтруктураДополнительногоЛиста();
	
#Область ОсновнойЛист
	
#Область КонтактныйТелефон

	//++1. Контактный телефон
	ТекстВвода 		 	= ДанныеИнспектора.НомерТелефона;
	МассивКолонок = МассивКолонокВвода(28);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(66, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--1. Контактный телефон
	
#КонецОбласти 

#Область ФИО_Гражданство

	//++2.1 Фамилия 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Фамилия);
	МассивКолонок = МассивКолонокВвода(19);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(70, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.1 Фамилия 

	//++2.2 Имя 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Имя);
	НачальнаяКолонка = 2;
	МассивКолонок = МассивКолонокВвода(19);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(72, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.2 Имя 

	//++2.3 Отчество 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Отчество);
	НачальнаяКолонка = 2;
	МассивКолонок = МассивКолонокВвода(22);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(75, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.3 Отчество 
	
	//++2.4 Гражданство 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Гражданство);
	МассивКолонок = МассивКолонокВвода(22);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(78, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.4 Гражданство 
	
#КонецОбласти 

#Область МестоРождения
	
	//++2.5 Место рождения 
	ТекстВвода 		 = СокрЛП(СтрЗаменить(Сред(ВРЕГ(ДанныеОбъекта.МестоРождения),3),","," "));
	МассивКолонок1 = МассивКолонокВвода(31);
	МассивКолонок2 = МассивКолонокВвода(1);
	
	КоличествоЯчеекОЛ = МассивКолонок1.Количество() + МассивКолонок2.Количество();
	Если СтрДлина(ТекстВвода) > КоличествоЯчеекОЛ Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяОбласти","2.5");
		СтруктураПараметров.Вставить("Описание",	"Место рождения (при наличии сведений)");
		СтруктураПараметров.Вставить("СтруктураБлоковДопЛиста",	СтруктураБлоковДопЛиста);
		СтруктураПараметров.Вставить("ЛистДополнительнй",		ЛистДополнительнй);
	
		ВвестиДанныеВДополнительныйЛист(ТекстВвода,КоличествоЯчеекОЛ,СтруктураПараметров);
	
	КонецЕсли;
	//если строка больше, то мы её уже порезали и теперь выводим остаток
	
	//1-й блок
	ВывестиОстатокТекстаВСтроку(ТекстВвода,80,МассивКолонок1,1,ЛистОсновной);
	//2-й блок
	ВывестиОстатокТекстаВСтроку(ТекстВвода,83,МассивКолонок2,МассивКолонок1.Количество()+1,ЛистОсновной);
	//--2.5 Место рождения 
	
#КонецОбласти 

#Область ДатаРождения
	
	//++2.6 Дата рождения 
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.ДатаРождения);
	
	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(28,31);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(85, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(40,43);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(85, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(52,61);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(85, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.6 Дата рождения
#КонецОбласти 	

#Область Паспорт

	//2.7.1 Данные паспорта  Серия
	ТекстВвода 		 = ДанныеОбъекта.Серия;
	МассивКолонок = МассивКолонокВвода(10,28);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(92, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	//2.7.2 Данные паспорта  Номер
	ТекстВвода 		 = ДанныеОбъекта.Номер;
	МассивКолонок = МассивКолонокВвода(37,61);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(92, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
#КонецОбласти 

#Область ДатаВыдачиПаспорта
	
	//++2.7.3 Данные паспорта  Дата выдачи
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.ДатаВыдачи);

	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(75,78);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(92, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(83,86);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(92, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(91,100);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(92, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.7.3 Данные паспорта  Дата выдачи
	
#КонецОбласти

#Область КемВыданПаспорт

	//2.7 КемВыдан 
	ТекстВвода 		 = СокрЛП(ВРег(ДанныеОбъекта.КемВыдан));
	МассивКолонок1 = МассивКолонокВвода(19);
	МассивКолонок2 = МассивКолонокВвода(19);
	
	КоличествоЯчеекОЛ = МассивКолонок1.Количество() + МассивКолонок2.Количество();
	Если СтрДлина(ТекстВвода) > КоличествоЯчеекОЛ Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяОбласти","2.7");
		СтруктураПараметров.Вставить("Описание",	"Документ, удостоверяющий личность");
		СтруктураПараметров.Вставить("СтруктураБлоковДопЛиста",	СтруктураБлоковДопЛиста);
		СтруктураПараметров.Вставить("ЛистДополнительнй",		ЛистДополнительнй);
	
		ВвестиДанныеВДополнительныйЛист(ТекстВвода,КоличествоЯчеекОЛ,СтруктураПараметров);
	
	КонецЕсли;
	//если строка больше, то мы её уже порезали и теперь выводим остаток
	
	//1-й блок
	ВывестиОстатокТекстаВСтроку(ТекстВвода,95,МассивКолонок1,1,ЛистОсновной);
	//2-й блок
	ВывестиОстатокТекстаВСтроку(ТекстВвода,97,МассивКолонок2,МассивКолонок1.Количество()+1,ЛистОсновной);
	
#КонецОбласти 

#Область МиграционнаяКарта
	//2.8 Номер миграционной карты карты 
	ТекстВвода 		 = ВРег(СтрШаблон("%1 %2",ДанныеОбъекта.МиграционнаяКартаСерия,ДанныеОбъекта.МиграционнаяКартаНомер));
	ПроверкаНаПробелыНули(ТекстВвода); 

	МассивКолонок = МассивКолонокВвода(19,55);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(100, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
#КонецОбласти 

#Область ДатаВыдачиКарты
	
	//++ Дата карты
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.МиграционнаяКартаДатаВыдачи);

	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(19,22);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(103, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(28,31);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(103, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(37,46);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(103, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
//-- Дата карты
	
#КонецОбласти 

#Область АдресУчета
	
//2.9 Адрес учета
	ТекстВвода 		 = СтрЗаменить(ВРег(ДанныеОбъекта.ДомашнийАдрес),"РОССИЯ","");
	ТекстВвода = СокрЛП(СтрЗаменить(ТекстВвода,",",""));
	ПроверкаНаПробелыНули(ТекстВвода); 

	МассивКолонок1 = МассивКолонокВвода(37);
	МассивКолонок2 = МассивКолонокВвода(1);
	
	КоличествоЯчеекОЛ = МассивКолонок1.Количество() + МассивКолонок2.Количество();
	Если СтрДлина(ТекстВвода) > КоличествоЯчеекОЛ Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ИмяОбласти","2.9");
		СтруктураПараметров.Вставить("Описание",	" Адрес постановки на учет по месту пребывания или адрес регистрации по месту жительства (при наличии)");
		СтруктураПараметров.Вставить("СтруктураБлоковДопЛиста",	СтруктураБлоковДопЛиста);
		СтруктураПараметров.Вставить("ЛистДополнительнй",		ЛистДополнительнй);
	
		ВвестиДанныеВДополнительныйЛист(ТекстВвода,КоличествоЯчеекОЛ,СтруктураПараметров);
	
	КонецЕсли;
	//если строка больше, то мы её уже порезали и теперь выводим остаток
	
	//1-й блок
	ВывестиОстатокТекстаВСтроку(ТекстВвода,106,МассивКолонок1,1,ЛистОсновной);
	//2-й блок
	ВывестиОстатокТекстаВСтроку(ТекстВвода,108,МассивКолонок2,МассивКолонок1.Количество()+1,ЛистОсновной);
	
#КонецОбласти 

#Область ДатаРегистрации
	
	//++ Дата регистрации 
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.ДатаРегистрации);

	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(70,73);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(111, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(79,82);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(111, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(88,97);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(111, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
#КонецОбласти 

#Область Патент

	//3.1 Серия патента 
	ТекстВвода 		 = ДанныеОбъекта.ПатентСерия;
	МассивКолонок = МассивКолонокВвода(9,27);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(118, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	// Номер патента 
	ТекстВвода 		 = ДанныеОбъекта.ПатентНомер;
	МассивКолонок = МассивКолонокВвода(35,62);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(118, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
#КонецОбласти 
	
#Область ДатаПатента
	
	//++ Дата регистрации 
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.ПатентДатаВыдачи);

	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(75,78);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(118, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(83,86);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(118, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(91,100);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(118, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
#КонецОбласти 	

#Область СрокДействияПатента
	
	//++ Дата регистрации 
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.ПатентСрокС);

	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(20,23);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(124, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(29,32);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(124, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(38,47);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(124, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
#КонецОбласти

#Область Профессия
 	
//3.2 Профессия 
	ТекстВвода 		 = ВРег(ДанныеОбъекта.Должность);
	МассивКолонок = МассивКолонокВвода(1);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(136, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
#КонецОбласти

#Область ДатаЗаключенияДоговора
	
	//++ Дата регистрации 
	СтруктураДаты = ПреобразоватьДатуВСтруктуруВвода(ДанныеОбъекта.ТрудовойДоговорДата);

	ТекстВвода 		 = СтруктураДаты.День;
	МассивКолонок = МассивКолонокВвода(61,64);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(150, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
	ТекстВвода 		 = СтруктураДаты.Месяц;
	МассивКолонок = МассивКолонокВвода(70,73);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(150, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 

	ТекстВвода 		 = СтруктураДаты.Год;
	МассивКолонок = МассивКолонокВвода(79,88);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); 
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистОсновной.Cells(150, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	
#КонецОбласти

#Область ПодвалОсновногоЛиста
	ФИОИнспектора =  СтрШаблон("%1 %2.%3.",
				ДанныеИнспектора.Фамилия,
				Лев(ДанныеИнспектора.Имя,1),
				Лев(ДанныеИнспектора.Отчество,1)); 
				
	ЛистОсновной.Cells(165, 1).Value = ДанныеИнспектора.Должность;
	ЛистОсновной.Cells(165, 56).Value = ФИОИнспектора;
	
	ДатаФормирования = ТекущаяДата();
	ЛистОсновной.Cells(170, 3).Value = Формат(ДатаФормирования,"ДФ=""дд""");
	ЛистОсновной.Cells(170, 9).Value = МесяцПрописью(ДатаФормирования);
	ЛистОсновной.Cells(170, 30).Value = Формат(ДатаФормирования,"ДФ=""гггг""");
	
	//Доверенность
	ЛистОсновной.Cells(173, 48).Value = ДанныеИнспектора.ДоверенностьНомер;
	ЛистОсновной.Cells(173, 61).Value = Формат(ДанныеИнспектора.ДоверенностьДата,"ДФ=""дд""");
	ЛистОсновной.Cells(173, 67).Value = МесяцПрописью(ДанныеИнспектора.ДоверенностьДата);
	ЛистОсновной.Cells(173, 86).Value = Формат(ДанныеИнспектора.ДоверенностьДата,"ДФ=""гггг""");

	//ФИО
	ЛистОсновной.Cells(178, 1).Value = СтрШаблон("%1 %2 %3",ДанныеИнспектора.Фамилия,ДанныеИнспектора.Имя,ДанныеИнспектора.Отчество);
	
	//Паспорт
	ЛистОсновной.Cells(180, 10).Value = ДанныеИнспектора.Серия;
	ЛистОсновной.Cells(180, 32).Value = ДанныеИнспектора.Номер;
	ЛистОсновной.Cells(182, 15).Value = ДанныеИнспектора.КемВыдан;
	
	ЛистОсновной.Cells(180, 59).Value = Формат(ДанныеИнспектора.ДатаВыдачи,"ДФ=""дд""");
	ЛистОсновной.Cells(180, 66).Value = МесяцПрописью(ДанныеИнспектора.ДатаВыдачи);
	ЛистОсновной.Cells(180, 89).Value = Формат(ДанныеИнспектора.ДатаВыдачи,"ДФ=""гггг""");
	
#КонецОбласти 

#КонецОбласти 

#Область ДополнительныйЛист

#Область ФИО

	//++2.1 Фамилия 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Фамилия);
	МассивКолонок = МассивКолонокВвода(16,97);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница());  

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистДополнительнй.Cells(21, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.1 Фамилия 

	//++2.2 Имя 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Имя);
	НачальнаяКолонка = 2;
	МассивКолонок = МассивКолонокВвода(16,97);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистДополнительнй.Cells(23, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.2 Имя 

	//++2.3 Отчество 
	ТекстВвода 		 = ВРЕГ(ДанныеОбъекта.Отчество);
	НачальнаяКолонка = 2;
	МассивКолонок = МассивКолонокВвода(37,97);
	МаксимальныйИндекс = Мин(СтрДлина(ТекстВвода)-1, МассивКолонок.ВГраница()); //где 100 № последней ячейки

	Для Индекс = 0 По МаксимальныйИндекс Цикл
		ЛистДополнительнй.Cells(25, МассивКолонок[Индекс]).Value = Сред(ТекстВвода, Индекс +1, 1)
	КонецЦикла; 
	//--2.3 Отчество 
		
#КонецОбласти 

#Область Подвал 
	ФИОИнспектора =  СтрШаблон("%1 %2.%3.",
				ДанныеИнспектора.Фамилия,
				Лев(ДанныеИнспектора.Имя,1),
				Лев(ДанныеИнспектора.Отчество,1)); 
				
	ЛистДополнительнй.Cells(84, 1).Value = ДанныеИнспектора.Должность;
	ЛистДополнительнй.Cells(84, 54).Value = ФИОИнспектора;
	
	ДатаФормирования = ТекущаяДата();
	ЛистДополнительнй.Cells(86, 3).Value = Формат(ДатаФормирования,"ДФ=""дд""");
	ЛистДополнительнй.Cells(86, 9).Value = МесяцПрописью(ДатаФормирования);
	ЛистДополнительнй.Cells(86, 31).Value = Формат(ДатаФормирования,"ДФ=""гггг""");
	
	//Доверенность
	ЛистДополнительнй.Cells(88, 47).Value = ДанныеИнспектора.ДоверенностьНомер;
			
	ЛистДополнительнй.Cells(88, 58).Value = Формат(ДанныеИнспектора.ДоверенностьДата,"ДФ=""дд""");
	ЛистДополнительнй.Cells(88, 63).Value = МесяцПрописью(ДанныеИнспектора.ДоверенностьДата);
	ЛистДополнительнй.Cells(88, 74).Value = Формат(ДанныеИнспектора.ДоверенностьДата,"ДФ=""гггг""");

	//ФИО
	ЛистДополнительнй.Cells(90, 44).Value = СтрШаблон("%1 %2 %3",ДанныеИнспектора.Фамилия,ДанныеИнспектора.Имя,ДанныеИнспектора.Отчество);
	
	//Паспорт
	ЛистДополнительнй.Cells(91, 9).Value = ДанныеИнспектора.Серия;
	ЛистДополнительнй.Cells(91, 31).Value = ДанныеИнспектора.Номер;
	
	ЛистДополнительнй.Cells(92, 15).Value = ДанныеИнспектора.КемВыдан;
	
	ЛистДополнительнй.Cells(91, 56).Value = Формат(ДанныеИнспектора.ДатаВыдачи,"ДФ=""дд""");
	ЛистДополнительнй.Cells(91, 62).Value = МесяцПрописью(ДанныеИнспектора.ДатаВыдачи);
	ЛистДополнительнй.Cells(91, 83).Value = Формат(ДанныеИнспектора.ДатаВыдачи,"ДФ=""гггг""");
	
#КонецОбласти 

#КонецОбласти 


КонецПроцедуры // ЗаполнениеШаблонаWord()

&НаКлиенте
Процедура ЗаполнениеШаблонаWord(ДанныеОбъекта,ДанныеИнспектора,ПечатнаяФормаWord)

	ТекстВставки = СтрШаблон("ГР. %1, %2 %3 %4, %5 Г.Р., ПРИЕМ ОТ %6",
									СтрЗаменить(НРег(ДанныеОбъекта.Гражданство),"республика","республики"),
									ДанныеОбъекта.Фамилия,
									ДанныеОбъекта.Имя,
									ДанныеОбъекта.Отчество,
									Формат(ДанныеОбъекта.ДатаРождения,"ДЛФ=Д"),
									Формат(ДанныеОбъекта.ДатаПриема,"ДЛФ=Д"));
							
									
	 //Замена параметров
	Замена = ПечатнаяФормаWord.Content.Find;
	Замена.Execute("ТЕКСТУВОЛЬНЕНИЯПРИЕМА", Ложь, Истина, Ложь, , , Истина, , Ложь, ТекстВставки, 2);


//	ГР. РЕСПУБЛИКИ ТАДЖИКИСТАН, АЗИМОВ МУХРИДДИН АЗАМОВИЧ, 10.12.1996 Г.Р., ПРИЕМ ОТ 13.05.2019. 

//ГР. РЕСПУБЛИКИ ТАДЖИКИСТАН, АЗИМОВ МУХРИДДИН АЗАМОВИЧ, 10.12.1996 Г.Р., УВОЛЬНЕНИЕ ОТ 13.05.2019. 

КонецПроцедуры // ЗаполнениеШаблонаWord(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФормаWord)

#КонецОбласти 

#Область ПолучениеДанных

// <Описание функции>
//
&НаСервере
Функция ПолучитьДанныеПечати(МассивДокументов) 

	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли; 
	
	
	Результат = ПолучитьДанныеДокументов(МассивДокументов);
		
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	
	СоответствиеДанныеОбъектов = Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураВозврата = Новый Структура;	
		Для каждого Колонка Из Результат.Колонки Цикл
			СтруктураВозврата.Вставить(Колонка.Имя)
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(СтруктураВозврата,ВыборкаДетальныеЗаписи);
		
		СоответствиеДанныеОбъектов.Вставить(ВыборкаДетальныеЗаписи.ФизическоеЛицо,СтруктураВозврата);
		
	
	КонецЦикла; 

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СоответствиеДанныеОбъектов",	СоответствиеДанныеОбъектов);
	СтруктураВозврата.Вставить("МакетУведомление",				ОбработкаОбъект.ПолучитьМакет("МакетУведомление"));
	СтруктураВозврата.Вставить("Справка",						ОбработкаОбъект.ПолучитьМакет("Справка"));
	СтруктураВозврата.Вставить("ДанныеИнспектораПоКадрам",		ДанныеИнспектораПоКадрам());

	
	Возврат ПоместитьВоВременноеХранилище(СтруктураВозврата);

КонецФункции

&НаСервереБезКонтекста
Функция ДанныеИнспектораПоКадрам()

	Если  Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли;
	
	  Запрос = Новый Запрос;
	  Запрос.УстановитьПараметр("Пользователь",Пользователи.ТекущийПользователь());
	  Запрос.УстановитьПараметр("ВидДокумента",Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	  Запрос.УстановитьПараметр("Организация",
	  			Справочники.Монолит_ЗначенияСсылокСправочников.ОрганизацияМонолитстрой.ЗначениеСсылки);
	  
	  Запрос.Текст = "ВЫБРАТЬ
	  |	Пользователи.Ссылка КАК Ссылка,
	  |	Пользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |ПОМЕСТИТЬ ВременнаяТаблицаСправочникПользователи
	  |ИЗ
	  |	Справочник.Пользователи КАК Пользователи
	  |ГДЕ
	  |	Пользователи.Ссылка = &Пользователь
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ФизическоеЛицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ФизическиеЛица.Ссылка КАК Ссылка,
	  |	ФизическиеЛица.Фамилия КАК Фамилия,
	  |	ФизическиеЛица.Имя КАК Имя,
	  |	ФизическиеЛица.Отчество КАК Отчество,
	  |	ФизическиеЛица.ФИО КАК ФИО
	  |ПОМЕСТИТЬ ВременнаяТаблицаДанныеФизЛица
	  |ИЗ
	  |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	  |ГДЕ
	  |	ФизическиеЛица.Ссылка В
	  |			(ВЫБРАТЬ
	  |				ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |			ИЗ
	  |				ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	  |	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
	  |ПОМЕСТИТЬ ВременнаяТаблицаКонтактныйТелефон
	  |ИЗ
	  |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	  |ГДЕ
	  |	ФизическиеЛицаКонтактнаяИнформация.Ссылка В
	  |			(ВЫБРАТЬ
	  |				ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |			ИЗ
	  |				ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	  |	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	  |	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	  |	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	  |	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	  |	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	  |	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	  |	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения,
	  |	ДокументыФизическихЛицСрезПоследних.Представление КАК Представление
	  |ПОМЕСТИТЬ ВременнаяТаблицаДокументыФизическогоЛица
	  |ИЗ
	  |	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	  |			,
	  |			(ВидДокумента, Физлицо) В
	  |				(ВЫБРАТЬ
	  |					&ВидДокумента КАК ВидДокумента,
	  |					ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |				ИЗ
	  |					ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)) КАК ДокументыФизическихЛицСрезПоследних
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Физлицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	  |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность
	  |ПОМЕСТИТЬ ВременнаяТаблицаКадроваяИстория
	  |ИЗ
	  |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
	  |			,
	  |			(ФизическоеЛицо, ГоловнаяОрганизация) В
	  |				(ВЫБРАТЬ
	  |					ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо,
	  |					&Организация КАК Организация
	  |				ИЗ
	  |					ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)) КАК КадроваяИсторияСотрудниковСрезПоследних
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ФизическоеЛицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ВременнаяТаблицаДанныеФизЛица.Фамилия КАК Фамилия,
	  |	ВременнаяТаблицаДанныеФизЛица.Имя КАК Имя,
	  |	ВременнаяТаблицаДанныеФизЛица.Отчество КАК Отчество,
	  |	ВременнаяТаблицаДанныеФизЛица.ФИО КАК ФИО,
	  |	ВременнаяТаблицаКонтактныйТелефон.НомерТелефона КАК НомерТелефона,
	  |	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаДокументыФизическогоЛица.ВидДокумента) КАК ВидДокумента,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Серия КАК Серия,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Номер КАК Номер,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.ДатаВыдачи КАК ДатаВыдачи,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.СрокДействия КАК СрокДействия,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.КемВыдан КАК КемВыдан,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.КодПодразделения КАК КодПодразделения,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Представление КАК ПредставлениеДокумента,
	  |	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаКадроваяИстория.Должность) КАК Должность
	  |ИЗ
	  |	ВременнаяТаблицаДанныеФизЛица КАК ВременнаяТаблицаДанныеФизЛица
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКонтактныйТелефон КАК ВременнаяТаблицаКонтактныйТелефон
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаКонтактныйТелефон.Ссылка
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыФизическогоЛица КАК ВременнаяТаблицаДокументыФизическогоЛица
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаДокументыФизическогоЛица.Физлицо
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКадроваяИстория КАК ВременнаяТаблицаКадроваяИстория
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаКадроваяИстория.ФизическоеЛицо";
	  
	  Результат = Запрос.Выполнить();
	  Выборка =  Результат.Выбрать();

	  СтруктураВозврата = Новый Структура;	
	  Для каждого Колонка Из Результат.Колонки Цикл
		  СтруктураВозврата.Вставить(Колонка.Имя)
	  КонецЦикла;

	  Если Выборка.Следующий() Тогда 
		 		  
		  ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	  Иначе
		  Для каждого КлючИЗначение Из СтруктураВозврата Цикл
		  	    КлючИЗначение.Значение = ""
		  КонецЦикла; 
		  
	  КонецЕсли; 
	  
	  
	  //Данных по доверенности в базе не наю откуда брать
	  СтруктураВозврата.Вставить("ДоверенностьНомер","");
	  СтруктураВозврата.Вставить("ДоверенностьДата","");
	  
	  // № 6 от 18 июня 2018
	  Если СтруктураВозврата.Фамилия = "Гарова" Тогда
		  
		  СтруктураВозврата.ДоверенностьНомер = "6";
		  СтруктураВозврата.ДоверенностьДата = '2018.06.18';
		  
	  КонецЕсли; 
	  
	  Если СтруктураВозврата.Фамилия = "Ященко" Тогда
		  
		  СтруктураВозврата.ДоверенностьНомер = "5";
		  СтруктураВозврата.ДоверенностьДата = '2010.01.17';
		  
	  КонецЕсли; 
	  
	  
	  Возврат СтруктураВозврата;
	  

КонецФункции // ПолучитьДанныеПользователя()

&НаСервереБезКонтекста
Функция ПолучитьДанныеДокументов(МассивДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриемНаРаботу.Ссылка КАК Ссылка,
	|	ПриемНаРаботу.Организация КАК Организация,
	|	ПриемНаРаботу.Подразделение КАК Подразделение,
	|	ПриемНаРаботу.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПриемНаРаботу.ТрудовойДоговорНомер КАК ТрудовойДоговорНомер,
	|	ПриемНаРаботу.ТрудовойДоговорДата КАК ТрудовойДоговорДата,
	|	ПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора,
	|	ПриемНаРаботу.Должность КАК Должность,
	|	ПриемНаРаботу.ДатаПриема КАК ДатаПриема,
	|	0 КАК НомерСтроки,
	|	ПриемНаРаботу.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ДанныеДокументовПриемНаРаботу
	|ИЗ
	|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|ГДЕ
	|	ПриемНаРаботу.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриемНаРаботуСписком.Ссылка,
	|	ПриемНаРаботуСписком.Организация,
	|	ПриемНаРаботуСпискомСотрудники.Подразделение,
	|	ПриемНаРаботуСпискомСотрудники.ФизическоеЛицо,
	|	ПриемНаРаботуСпискомСотрудники.ТрудовойДоговорНомер,
	|	ПриемНаРаботуСпискомСотрудники.ТрудовойДоговорДата,
	|	ПриемНаРаботуСпискомСотрудники.ДатаЗавершенияТрудовогоДоговора,
	|	ПриемНаРаботуСпискомСотрудники.Должность,
	|	ПриемНаРаботуСпискомСотрудники.ДатаПриема,
	|	ПриемНаРаботуСпискомСотрудники.НомерСтроки,
	|	ПриемНаРаботуСпискомСотрудники.Сотрудник
	|ИЗ
	|	Документ.ПриемНаРаботуСписком.Сотрудники КАК ПриемНаРаботуСпискомСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуСписком КАК ПриемНаРаботуСписком
	|		ПО ПриемНаРаботуСпискомСотрудники.Ссылка = ПриемНаРаботуСписком.Ссылка
	|ГДЕ
	|	ПриемНаРаботуСпискомСотрудники.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГражданствоФизическихЛицСрезПоследних.Страна КАК Страна,
	|	ГражданствоФизическихЛицСрезПоследних.ИНН КАК ИНН,
	|	СтраныМира.НаименованиеПолное КАК НаименованиеПолноеСтрана
	|ПОМЕСТИТЬ ВременнаяТаблица_Гражданство
	|ИЗ
	|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ГражданствоФизическихЛицСрезПоследних.Страна = СтраныМира.Ссылка
	|ГДЕ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Монолит_ДанныеИностранца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Монолит_ДанныеИностранца.РазрешениеСерия КАК РазрешениеСерия,
	|	Монолит_ДанныеИностранца.РазрешениеНомер КАК РазрешениеНомер,
	|	Монолит_ДанныеИностранца.РазрешениеДатаВыдачи КАК РазрешениеДатаВыдачи,
	|	Монолит_ДанныеИностранца.РазрешениеДействительноДо КАК РазрешениеДействительноДо,
	|	Монолит_ДанныеИностранца.РазрешениеТерриторияДействия КАК РазрешениеТерриторияДействия,
	|	Монолит_ДанныеИностранца.РазрешениеКемВыдано КАК РазрешениеКемВыдано,
	|	Монолит_ДанныеИностранца.РазрешениеДатаПостановкиНаМиграционныйУчет КАК РазрешениеДатаПостановкиНаМиграционныйУчет,
	|	Монолит_ДанныеИностранца.РазрешениеКтоПоставилНаУчет КАК РазрешениеКтоПоставилНаУчет,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаСерия КАК МиграционнаяКартаСерия,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаНомер КАК МиграционнаяКартаНомер,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаДатаВыдачи КАК МиграционнаяКартаДатаВыдачи,
	|	Монолит_ДанныеИностранца.ПатентСерия КАК ПатентСерия,
	|	Монолит_ДанныеИностранца.ПатентНомер КАК ПатентНомер,
	|	Монолит_ДанныеИностранца.ПатентДатаВыдачи КАК ПатентДатаВыдачи,
	|	Монолит_ДанныеИностранца.ПатентСрокС КАК ПатентСрокС,
	|	Монолит_ДанныеИностранца.ПатентСрокПо КАК ПатентСрокПо,
	|	Монолит_ДанныеИностранца.ПатентНаименование КАК ПатентНаименование,
	|	Монолит_ДанныеИностранца.ПатентКемВыдан КАК ПатентКемВыдан
	|ПОМЕСТИТЬ ВременнаяТаблица_РазрешенияПатенты
	|ИЗ
	|	РегистрСведений.Монолит_ДанныеИностранца КАК Монолит_ДанныеИностранца
	|ГДЕ
	|	Монолит_ДанныеИностранца.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Монолит_УведомленияИностранцев.ПриказОрганизации КАК ПриказОрганизации,
	|	Монолит_УведомленияИностранцев.ГосударственнаяОрганизация КАК ГосударственнаяОрганизация,
	|	Монолит_УведомленияИностранцев.ДатаУведомления КАК ДатаУведомления
	|ПОМЕСТИТЬ ВременнаяТаблица_Уведомления
	|ИЗ
	|	РегистрСведений.Монолит_УведомленияИностранцев КАК Монолит_УведомленияИностранцев
	|ГДЕ
	|	Монолит_УведомленияИностранцев.ПриказОрганизации В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК Ссылка,
	|	ФизическиеЛица.МестоРождения КАК МестоРождения,
	|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
	|	ФизическиеЛица.Пол КАК Пол,
	|	ФизическиеЛица.ДатаРегистрации КАК ДатаРегистрации,
	|	ФизическиеЛица.ФИО КАК ФИО,
	|	ФизическиеЛица.Фамилия КАК Фамилия,
	|	ФизическиеЛица.Имя КАК Имя,
	|	ФизическиеЛица.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВременнаяТаблица_ДанныеФизическогоЛица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|	ПРЕДСТАВЛЕНИЕ(ДокументыФизическихЛицСрезПоследних.ВидДокумента) КАК ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения
	|ПОМЕСТИТЬ ВременнаяТаблица_ДокументыФизичесткогоЛица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|	И ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛицаКонтактнаяИнформация.Представление КАК ДомашнийАдрес,
	|	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Временнаятаблица_ДомашнийАдрес
	|ИЗ
	|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	|ГДЕ
	|	ФизическиеЛицаКонтактнаяИнформация.Ссылка В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо КАК ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|	И ФизическиеЛицаКонтактнаяИнформация.Вид = Значение(Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовПриемНаРаботу.Ссылка КАК Ссылка,
	|	ДанныеДокументовПриемНаРаботу.Организация КАК Организация,
	|	ДанныеДокументовПриемНаРаботу.Подразделение КАК Подразделение,
	|	ДанныеДокументовПриемНаРаботу.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокументовПриемНаРаботу.ТрудовойДоговорНомер КАК ТрудовойДоговорНомер,
	|	ДанныеДокументовПриемНаРаботу.ТрудовойДоговорДата КАК ТрудовойДоговорДата,
	|	ДанныеДокументовПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокументовПриемНаРаботу.Должность) КАК Должность,
	|	ДанныеДокументовПриемНаРаботу.ДатаПриема КАК ДатаПриема,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Фамилия КАК Фамилия,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Имя КАК Имя,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Отчество КАК Отчество,
	|	ВременнаяТаблица_Гражданство.Страна КАК Страна,
	|	ВременнаяТаблица_Гражданство.НаименованиеПолноеСтрана КАК Гражданство,
	|	ВременнаяТаблица_Гражданство.ИНН КАК ИННГражданство,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеСерия КАК РазрешениеСерия,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеНомер КАК РазрешениеНомер,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеДатаВыдачи КАК РазрешениеДатаВыдачи,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеДействительноДо КАК РазрешениеДействительноДо,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеТерриторияДействия КАК РазрешениеТерриторияДействия,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеКемВыдано КАК РазрешениеКемВыдано,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеДатаПостановкиНаМиграционныйУчет КАК РазрешениеДатаПостановкиНаМиграционныйУчет,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеКтоПоставилНаУчет КАК РазрешениеКтоПоставилНаУчет,
	|	ВременнаяТаблица_РазрешенияПатенты.МиграционнаяКартаСерия КАК МиграционнаяКартаСерия,
	|	ВременнаяТаблица_РазрешенияПатенты.МиграционнаяКартаНомер КАК МиграционнаяКартаНомер,
	|	ВременнаяТаблица_РазрешенияПатенты.МиграционнаяКартаДатаВыдачи КАК МиграционнаяКартаДатаВыдачи,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентСерия КАК ПатентСерия,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентНомер КАК ПатентНомер,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентДатаВыдачи КАК ПатентДатаВыдачи,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентСрокС КАК ПатентСрокС,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентСрокПо КАК ПатентСрокПо,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентНаименование КАК ПатентНаименование,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентКемВыдан КАК ПатентКемВыдан,
	|	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблица_Уведомления.ГосударственнаяОрганизация) КАК ОрганВласти,
	|	ВременнаяТаблица_Уведомления.ДатаУведомления КАК ДатаУведомления,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.МестоРождения КАК МестоРождения,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.ДатаРождения КАК ДатаРождения,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской) КАК ПолМужской,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.ДатаРегистрации КАК ДатаРегистрации,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.ВидДокумента КАК ВидДокумента,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.Серия КАК Серия,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.Номер КАК Номер,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.ДатаВыдачи КАК ДатаВыдачи,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.СрокДействия КАК СрокДействия,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.КемВыдан КАК КемВыдан,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.КодПодразделения КАК КодПодразделения,
	|	isnull(Временнаятаблица_ДомашнийАдрес.ДомашнийАдрес,"""") КАК ДомашнийАдрес
	|ИЗ
	|	ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_Гражданство КАК ВременнаяТаблица_Гражданство
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_Гражданство.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_РазрешенияПатенты КАК ВременнаяТаблица_РазрешенияПатенты
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_РазрешенияПатенты.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_Уведомления КАК ВременнаяТаблица_Уведомления
	|		ПО ДанныеДокументовПриемНаРаботу.Ссылка = ВременнаяТаблица_Уведомления.ПриказОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ДанныеФизическогоЛица КАК ВременнаяТаблица_ДанныеФизическогоЛица
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_ДанныеФизическогоЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ДокументыФизичесткогоЛица КАК ВременнаяТаблица_ДокументыФизичесткогоЛица
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_ДокументыФизичесткогоЛица.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Временнаятаблица_ДомашнийАдрес КАК Временнаятаблица_ДомашнийАдрес
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = Временнаятаблица_ДомашнийАдрес.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДанныеДокументовПриемНаРаботу.НомерСтроки";


	Возврат Запрос.Выполнить();


КонецФункции 

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверкаНаПробелыНули(СтрокаТекста)

	МассивЗнаков = Новый Массив;
	ДлинаСтроки 	= СтрДлина(СтрокаТекста);
	Для Счетчик = 1 По ДлинаСтроки Цикл
		МассивЗнаков.Добавить(Сред(СтрокаТекста,Счетчик,1));
	КонецЦикла; 
	
	МассивЦифр = СтрРазделить("1,2,3,4,5,6,7,8,9",",");
	Для каждого Цифра Из МассивЦифр Цикл
	
		Если Не МассивЗнаков.Найти(Цифра) = Неопределено Тогда
			  Возврат
		КонецЕсли; 
	
	КонецЦикла; 
	
	СтрокаТекста = "";

КонецПроцедуры // ПроверкаНаПробелыНули()

&НаКлиенте
Функция ДобавитьСтраницыВКнигу(КнигаExcel,ПервыйВход,ИмяЛиста)
	
	//ИмяЛиста  - фамилия физ.лица
	Если ПервыйВход Тогда
		КнигаExcel.WorkSheets(1).Name = ИмяОсновногоЛиста(ИмяЛиста);
		КнигаExcel.WorkSheets(2).Name = ИмяДополнительногоЛиста(ИмяЛиста);
		
		ПервыйВход = Ложь
		
	Иначе
		 //Copy(Before, After) Copy два параметра: первый параметр - это "перед", второй - "после"
		 КнигаExcel.WorkSheets(1).Copy(null,КнигаExcel.WorkSheets(КнигаExcel.WorkSheets.Count));
		 КнигаExcel.WorkSheets(КнигаExcel.WorkSheets.Count).Name = ИмяОсновногоЛиста(ИмяЛиста);
		                             
		 КнигаExcel.WorkSheets(2).Copy(null,КнигаExcel.WorkSheets(КнигаExcel.WorkSheets.Count));
		 КнигаExcel.WorkSheets(КнигаExcel.WorkSheets.Count).Name = ИмяДополнительногоЛиста(ИмяЛиста);

	КонецЕсли; 


КонецФункции // ПолучитьСтраницыКниги()

&НаКлиенте
Функция ИмяОсновногоЛиста(ИмяЛиста)

	Возврат ИмяЛиста;

КонецФункции // ИмяОсновногоЛиста()

&НаКлиенте
Функция ИмяДополнительногоЛиста(ИмяЛиста)

	 Возврат СтрШаблон("%1 (доп)",ИмяЛиста);

КонецФункции // ИмяДополнительногоЛиста()

// Дополнительный лист Excel содержит четыре блока по 5 строк
// функция возвращает структуру массивов, где Массив[0] - Булево - флаг использования
//											  Массив[1] - Массив, с номерами строк блока, где последняя строка для обозначения блока основного листа
//
&НаКлиенте
Функция СтруктураДополнительногоЛиста()
	
	СтруктураДопЛиста =  Новый Структура;
	
	//1
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(29);
	МассивСтрок.Добавить(31);
	МассивСтрок.Добавить(33);
	МассивСтрок.Добавить(35);
	МассивСтрок.Добавить(37);
	МассивСтрок.Добавить(39);
	
	Массив = Новый Массив;
	Массив.Добавить(Ложь);
	Массив.Добавить(МассивСтрок);
	
	СтруктураДопЛиста.Вставить("Блок1", Массив);
	
	//2
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(42);
	МассивСтрок.Добавить(44);
	МассивСтрок.Добавить(46);
	МассивСтрок.Добавить(48);
	МассивСтрок.Добавить(52);
	МассивСтрок.Добавить(54);
	
	Массив = Новый Массив;
	Массив.Добавить(Ложь);
	Массив.Добавить(МассивСтрок);
	
	СтруктураДопЛиста.Вставить("Блок2", Массив);

	//3
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(57);
	МассивСтрок.Добавить(59);
	МассивСтрок.Добавить(61);
	МассивСтрок.Добавить(63);
	МассивСтрок.Добавить(65);
	МассивСтрок.Добавить(67);
	
	Массив = Новый Массив;
	Массив.Добавить(Ложь);
	Массив.Добавить(МассивСтрок);
	
	СтруктураДопЛиста.Вставить("Блок3", Массив);

	//4
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(70);
	МассивСтрок.Добавить(72);
	МассивСтрок.Добавить(74);
	МассивСтрок.Добавить(76);
	МассивСтрок.Добавить(78);
	МассивСтрок.Добавить(80);
	
	Массив = Новый Массив;
	Массив.Добавить(Ложь);
	Массив.Добавить(МассивСтрок);
	
	СтруктураДопЛиста.Вставить("Блок4", Массив);
	
	Возврат СтруктураДопЛиста;
	
КонецФункции // СтруктураДополнительногоЛиста()

&НаКлиенте
Функция МассивКолонокВвода(НачальнаяКолонка=1,КонечнаяКолонка=100, Шаг=3)
	Шаг = Шаг-1;
	Массив = Новый Массив;
	Для Счетчик = НачальнаяКолонка По КонечнаяКолонка Цикл
		
		Массив.Добавить(Счетчик);
		 
		 Для i=1 По Шаг Цикл
		 	Счетчик = Счетчик + 1
		КонецЦикла; 
		
	 КонецЦикла;
	 
	 Возврат Массив;
	 
КонецФункции

// Обрезает переданную строку по пробелу справа, выводит данные в доп. лист
//
&НаКлиенте
Процедура ВвестиДанныеВДополнительныйЛист(ТекстВвода,КоличествоЯчеекОЛ,СтруктураПараметров)

	//1. Режем ТекстВвода
	//ПозицияПробела = СтрНайти(ТекстВвода," ",НаправлениеПоиска.СКонца,КоличествоЯчеекОЛ,1);
	ОстатокСтроки = Сред(ТекстВвода,КоличествоЯчеекОЛ + 1);
	ТекстВвода = СтрЗаменить(ТекстВвода,ОстатокСтроки,"");
	
	//2. Выводим в доп.лист
	МассивСтрок = Неопределено;
	СтруктураБлоков = СтруктураПараметров.СтруктураБлоковДопЛиста; //структура куда бум размещаться
	Для  i = 1 По 4 Цикл
	    Массив = СтруктураБлоков[СтрШаблон("Блок%1",i)];
		Если Не Массив[0] Тогда
		
			Массив[0] 	= Истина;    		//устанавливаем флаг использования
			МассивСтрок = Массив[1];    //Получаем массив номеров строк вывода
			Прервать;
		
		КонецЕсли;
	КонецЦикла; 
	
	Если МассивСтрок = Неопределено Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = СтрШаблон("Не удалось вывести%1%2%1нет свободных ячеек",Символы.ПС,ОстатокСтроки);
	   	СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли; 

	МассивКолонок1 = МассивКолонокВвода(1,97);
	МассивКолонок2 = МассивКолонокВвода(1,97);
	МассивКолонок3 = МассивКолонокВвода(1,97);
	МассивКолонок4 = МассивКолонокВвода(1,97);
	МассивКолонок5 = МассивКолонокВвода(1,97);

	//1-я строка
	ВывестиОстатокТекстаВСтроку(ОстатокСтроки,МассивСтрок[0],МассивКолонок1,1,СтруктураПараметров.ЛистДополнительнй);
	
	//2-я строка
	ВывестиОстатокТекстаВСтроку(ОстатокСтроки,МассивСтрок[1],МассивКолонок2,МассивКолонок1.Количество()+1,СтруктураПараметров.ЛистДополнительнй);

	//3-я строка
	ВывестиОстатокТекстаВСтроку(ОстатокСтроки,МассивСтрок[2],МассивКолонок3,МассивКолонок2.Количество()+1,СтруктураПараметров.ЛистДополнительнй);
	
	//4-я строка
	ВывестиОстатокТекстаВСтроку(ОстатокСтроки,МассивСтрок[3],МассивКолонок4,МассивКолонок3.Количество()+1,СтруктураПараметров.ЛистДополнительнй);
	
	//5-я строка
	ВывестиОстатокТекстаВСтроку(ОстатокСтроки,МассивСтрок[4],МассивКолонок5,МассивКолонок4.Количество()+1,СтруктураПараметров.ЛистДополнительнй);
	
	//Последняя сторка блока
	СтруктураПараметров.ЛистДополнительнй.Cells(МассивСтрок[5], 1).Value = СтруктураПараметров.ИмяОбласти;
	СтруктураПараметров.ЛистДополнительнй.Cells(МассивСтрок[5], 27).Value = СтруктураПараметров.Описание;
	
	
КонецПроцедуры // ВвестиДанныеВДополнительныйЛист()

// <Описание процедуры>
&НаКлиенте
Процедура ВывестиОстатокТекстаВСтроку(ТекстВывода,НомерСтроки,МассивКолонок,ПозицияСреза=1,Лист)

	ТекстВывода = Сред(СокрЛП(ТекстВывода),ПозицияСреза);
	
	ДлинаСтроки = СтрДлина(ТекстВывода);
	Если ДлинаСтроки = 0 Тогда
		 Возврат
	КонецЕсли; 
	
	МаксимальныйИндекс = Мин(ДлинаСтроки - 1, МассивКолонок.ВГраница()); //где 97 № последней ячейки
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		Лист.Cells(НомерСтроки, МассивКолонок[Индекс]).Value = Сред(ТекстВывода, Индекс +1, 1)
	КонецЦикла; 


КонецПроцедуры // ВывестиОстатокТекстаВСтроку()

&НаКлиенте
Функция ПреобразоватьДатуВСтруктуруВвода(ЗначениеДата)
	
	СтруктураДаты = Новый Структура;
	СтруктураДаты.Вставить("День",	"");
	СтруктураДаты.Вставить("Месяц", "");
	СтруктураДаты.Вставить("Год",	"");

	Если ЗначениеДата = '00010101' Или Не ТипЗнч(ЗначениеДата) = Тип("Дата") Тогда
		Возврат СтруктураДаты
	КонецЕсли; 
	
	СтруктураДаты.Вставить("День",	Формат(День(ЗначениеДата),"ЧЦ=2; ЧГ=0; ЧВН="));
	СтруктураДаты.Вставить("Месяц", Формат(Месяц(ЗначениеДата),"ЧЦ=2; ЧГ=0; ЧВН="));
	СтруктураДаты.Вставить("Год",	Формат(Год(ЗначениеДата),"ЧЦ=4; ЧГ=0; ЧВН="));
	
	Возврат СтруктураДаты;
	
КонецФункции // ПреобразоватьДату()

&НаКлиенте
Функция МесяцПрописью(ЗначениеДата)
	
	Если Не ТипЗнч(ЗначениеДата) = Тип("Дата") Тогда
		Возврат ""
	КонецЕсли; 
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(1,"января");
	Соответствие.Вставить(2,"февраля");
	Соответствие.Вставить(3,"марта");
	Соответствие.Вставить(4,"апреля");
	Соответствие.Вставить(5,"мая");
	Соответствие.Вставить(6,"июня");
	Соответствие.Вставить(7,"июля");
	Соответствие.Вставить(8,"августа");
	Соответствие.Вставить(9,"сентября");
	Соответствие.Вставить(10,"октября");
	Соответствие.Вставить(11,"ноября");
	Соответствие.Вставить(12,"декабря");

	Возврат Соответствие[Месяц(ЗначениеДата)];	

КонецФункции // МесяцПрописью()


#КонецОбласти 





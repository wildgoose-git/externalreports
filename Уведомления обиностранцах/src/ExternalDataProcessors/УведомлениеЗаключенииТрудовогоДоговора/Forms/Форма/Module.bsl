

&НаКлиенте
Процедура Печать(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
	
	Если ИдентификаторКоманды = "ПФ_MXL_УведомлениеЗаключенииТрудовогоДоговора" Тогда
		ПечатьУведомления(ОбъектыНазначенияМассив);
	КонецЕсли;

	Если ИдентификаторКоманды = "ПФ_MXL_СправкаПриТрудовогоДоговора" Тогда
		ПечатьСправки(ОбъектыНазначенияМассив);
	КонецЕсли;
	

	Если ИдентификаторКоманды = "ПФ_MXL_ДополнительныйЛист" Тогда
		ПечатьДополнительныйЛист(ОбъектыНазначенияМассив);
	КонецЕсли;
	Если ИдентификаторКоманды = "ПФ_MXL_УведомлениеЗаключенииТрудовогоДоговораПакет" Тогда
		ПечатьПакет(ОбъектыНазначенияМассив);
	КонецЕсли;
	
	
КонецПроцедуры

#Область ПроцедурыПечати

&НаКлиенте
Процедура ПечатьУведомления(ОбъектыНазначенияМассив)

		
	АдресВоВременномХранилище = ПолучитьДанныеПечати(ОбъектыНазначенияМассив);
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);

	//Инициализация Word
	Попытка	
		ОбъектWORD = Новый COMОбъект("Word.Application");
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Word";
		СообщениеПользователю.Сообщить();
		ОбъектWORD = Неопределено;
		Возврат;
	КонецПопытки;
	
	//Заполнение шаблонов
	Для каждого КлючИЗначение Из  СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		
		Попытка
			
			ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".docx");

			СтруктураДанных.МакетУведомления.Записать(ИмяВременногоФайла_Word); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
			ПечатнаяФорма.Activate();

			ЗаполнитьУведомлениеОЗаключениТрудовогоДоговора(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	
			
		Исключение
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			ОбъектWORD.Quit();
			ОбъектWORD = Неопределено;
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла; 
	
	ОбъектWORD.Visible  = Истина;
	ОбъектWORD 			= Неопределено;


КонецПроцедуры // ПечатьУведомления()

&НаКлиенте
Процедура ПечатьСправки(ОбъектыНазначенияМассив)

		
	АдресВоВременномХранилище = ПолучитьДанныеПечати(ОбъектыНазначенияМассив);
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);

	//Инициализация Word
	Попытка	
		ОбъектWORD = Новый COMОбъект("Word.Application");
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Word";
		СообщениеПользователю.Сообщить();
		ОбъектWORD = Неопределено;
		Возврат;
	КонецПопытки;
	
	//Заполнение шаблонов
	Для каждого КлючИЗначение Из  СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		
		Попытка
			
			ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".docx");

			СтруктураДанных.МакетСправки.Записать(ИмяВременногоФайла_Word); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
			ПечатнаяФорма.Activate();

			ЗаполнитьСправкуПриЗаключениТрудовогоДоговора(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	
			
		Исключение
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			ОбъектWORD.Quit();
			ОбъектWORD = Неопределено;
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла; 
	
	ОбъектWORD.Visible  = Истина;
	ОбъектWORD 			= Неопределено;


КонецПроцедуры // ПечатьСправки()

&НаКлиенте
Процедура ПечатьДополнительныйЛист(ОбъектыНазначенияМассив)

		
	АдресВоВременномХранилище = ПолучитьДанныеПечати(ОбъектыНазначенияМассив);
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);

	//Инициализация Word
	Попытка	
		ОбъектWORD = Новый COMОбъект("Word.Application");
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Word";
		СообщениеПользователю.Сообщить();
		ОбъектWORD = Неопределено;
		Возврат;
	КонецПопытки;
	
	//Заполнение шаблонов
	Для каждого КлючИЗначение Из  СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		
		Попытка
			
			ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".docx");

			СтруктураДанных.МакетДополнительныйЛист.Записать(ИмяВременногоФайла_Word); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
			ПечатнаяФорма.Activate();

			ЗаполнитьДополнительныйЛист(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	
			
		Исключение
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			ОбъектWORD.Quit();
			ОбъектWORD = Неопределено;
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла; 
	
	ОбъектWORD.Visible  = Истина;
	ОбъектWORD 			= Неопределено;


КонецПроцедуры // ПечатьУведомления()

&НаКлиенте
Процедура ПечатьПакет(ОбъектыНазначенияМассив)

		
	АдресВоВременномХранилище = ПолучитьДанныеПечати(ОбъектыНазначенияМассив);
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);

	//Инициализация Word
	Попытка	
		ОбъектWORD = Новый COMОбъект("Word.Application");
	Исключение
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Возникла проблема с созданием файла Word";
		СообщениеПользователю.Сообщить();
		ОбъектWORD = Неопределено;
		Возврат;
	КонецПопытки;
	
	//Заполнение шаблонов
	Для каждого КлючИЗначение Из  СтруктураДанных.СоответствиеДанныеОбъектов Цикл
		
		Попытка
			//Уведомление
			ИмяВременногоФайла_Word_МакетУведомления = ПолучитьИмяВременногоФайла(".docx");

			СтруктураДанных.МакетУведомления.Записать(ИмяВременногоФайла_Word_МакетУведомления); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word_МакетУведомления);
			ПечатнаяФорма.Activate();

			ЗаполнитьУведомлениеОЗаключениТрудовогоДоговора(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();
			//доп. лист
			ИмяВременногоФайла_Word_ДополнительныйЛист = ПолучитьИмяВременногоФайла(".docx");
			СтруктураДанных.МакетДополнительныйЛист.Записать(ИмяВременногоФайла_Word_ДополнительныйЛист); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word_ДополнительныйЛист);
			ПечатнаяФорма.Activate();

			ЗаполнитьДополнительныйЛист(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	

			//Справка
			ИмяВременногоФайла_Word_Справки = ПолучитьИмяВременногоФайла(".docx");

			СтруктураДанных.МакетСправки.Записать(ИмяВременногоФайла_Word_Справки); //Двоичные данные
			
			ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word_Справки);
			ПечатнаяФорма.Activate();

			ЗаполнитьСправкуПриЗаключениТрудовогоДоговора(КлючИЗначение.Значение,СтруктураДанных.ДанныеИнспектораПоКадрам,ПечатнаяФорма);
			
			ПечатнаяФорма.Save();	


		Исключение
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ОписаниеОшибки();
			СообщениеПользователю.Сообщить();
			ОбъектWORD.Quit();
			ОбъектWORD = Неопределено;
			
			Возврат;
			
		КонецПопытки;
		
	КонецЦикла; 
	
	ОбъектWORD.Visible  = Истина;
	ОбъектWORD 			= Неопределено;


КонецПроцедуры // ПечатьУведомления()

&НаКлиенте
Процедура ЗаполнитьУведомлениеОЗаключениТрудовогоДоговора(ДанныеОбъекта,ДанныеИнспектора,ПечатнаяФорма)

	СтруктураТаблиц =  СтруктураТаблицПоЗаголовкам(ПечатнаяФорма);
	
	//Таблица_КонтактныйТелефонИсполнителя
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КонтактныйТелефонИсполнителя;
	ТекстВвода 		 = ДанныеИнспектора.НомерТелефона;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Контактный телефон исполнителя"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Фамилия
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Фамилия;
	ТекстВвода 		 = ДанныеОбъекта.Фамилия;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Фамилия"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//Имя
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Имя;
	ТекстВвода 		 = ДанныеОбъекта.Имя;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Имя"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Отчество
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Отчество;
	ТекстВвода 		 = ДанныеОбъекта.Отчество;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Отчество"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Гражданство
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Гражданство;
	ТекстВвода 		 = ДанныеОбъекта.Гражданство;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Гражданство"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//Место рождения 
	ТаблицаВорд_1 	 = СтруктураТаблиц.Таблица_МестоРождения_1;
	ТаблицаВорд_2 	 = СтруктураТаблиц.Таблица_МестоРождения_2;
	ТекстВвода 		 = СокрЛП(СтрЗаменить(Сред(ДанныеОбъекта.МестоРождения,3),","," "));

	НачальнаяКолонка = 2;
	Если ТаблицаВорд_1.Columns.Count +ТаблицаВорд_2.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Место рождения"" меньше текста ввода'"));
	КонецЕсли;
	
	ЧислоСимволов = ТаблицаВорд_1.Columns.Count - НачальнаяКолонка + 1;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_1,Лев(ТекстВвода,ЧислоСимволов),НачальнаяКолонка);
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_2,Сред(ТекстВвода,ЧислоСимволов+1),1);


	//ДатаРождения
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_ДатаРождения;
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ДатаРождения);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата рождения"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	
	
	 //Паспорт серия, номер, дата выдачи
	 //серия 
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_ПаспортСерияНомерДата;
	ТекстВвода 		 = ДанныеОбъекта.Серия;
	НачальнаяКолонка = 2;
	Если 7 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Серия паспорта"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//номер
	ТекстВвода 		 = ДанныеОбъекта.Номер;
	НачальнаяКолонка = 10;
	Если 9 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Номер паспорта"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);


	//Дата выдачи
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ДатаВыдачи);
	НачальнаяКолонка = 21;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата выдачи"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//2.8 Гражданство 
	ТаблицаВорд_1 	 = СтруктураТаблиц.Таблица_ПаспортКемВыдан_1;
	ТаблицаВорд_2 	 = СтруктураТаблиц.Таблица_ПаспортКемВыдан_2;
	ТаблицаВорд_3 	 = СтруктураТаблиц.Таблица_ПаспортКемВыдан_3;
	ТекстВвода 		 = СокрЛП(ДанныеОбъекта.КемВыдан);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд_1.Columns.Count + ТаблицаВорд_2.Columns.Count + ТаблицаВорд_3.Columns.Count
		- НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (СтрШаблон(НСтр("ru = 'Длина таблицы ""Кем выдан"" меньше ""%1""'"),ТекстВвода));
	КонецЕсли;
	
	ЧислоСимволов = ТаблицаВорд_1.Columns.Count - НачальнаяКолонка + 1;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_1,Лев(ТекстВвода,ЧислоСимволов),НачальнаяКолонка);
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_2,Сред(ТекстВвода,ЧислоСимволов+ 1,ТаблицаВорд_2.Columns.Count),1);
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_3,Сред(ТекстВвода,ЧислоСимволов+ 1 +ТаблицаВорд_2.Columns.Count),1);

	
	//Патент серия 
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_ПатентСерияНомерДатаВыдачи;
	ТекстВвода 		 = ДанныеОбъекта.ПатентСерия;
	НачальнаяКолонка = 2;
	Если 9 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Серия патента"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);

	//Патент номер  
	ТекстВвода 		 = ДанныеОбъекта.ПатентНомер;
	НачальнаяКолонка = 10;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Номер патента"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);
	
	//Патент дата выдачи 
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ПатентДатаВыдачи);
	НачальнаяКолонка = 22;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата патента"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);

		
	//Патент срок действия С
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_ПатентСрокДействия;
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ПатентСрокС);
	НачальнаяКолонка = 2;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Срок действия 1"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Патент срок действия ДО
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ПатентСрокПо);
	НачальнаяКолонка = 13;
	Если 10 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Срок действия 2"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Профессия 
	ТаблицаВорд_1 	 = СтруктураТаблиц.Таблица_Профессия_1;
	ТаблицаВорд_2 	 = СтруктураТаблиц.Таблица_Профессия_2;
	ТекстВвода 		 = ДанныеОбъекта.Должность;
	НачальнаяКолонка = 1;
	Если ТаблицаВорд_2.Columns.Count + ТаблицаВорд_1.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Профессия"" меньше текста ввода'"));
	КонецЕсли;
	
	ЧислоСимволов = ТаблицаВорд_1.Columns.Count - НачальнаяКолонка + 1;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_1,Лев(ТекстВвода,ЧислоСимволов),НачальнаяКолонка);
	ЗаполнитьТаблицуТекстом(ТаблицаВорд_2,Сред(ТекстВвода,ЧислоСимволов+1),1);

	//Дата заключения договора
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_ДатаЗаключенияДоговора;
	ТекстВвода 		 = ПреобразоватьДатуВСтрокуВвода(ДанныеОбъекта.ТрудовойДоговорДата);
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Дата договора"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,2);
	
	//Данные Инспектора
	ФИОИнспектора =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2.%3.",
				ДанныеИнспектора.Фамилия,
				Лев(ДанныеИнспектора.Имя,1),
				Лев(ДанныеИнспектора.Отчество,1));
				
				
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыДолжностьФамилия;
	
	Ячейка = ТаблицаВорд.Cell(1,1).Range;
	Ячейка.text = ДанныеИнспектора.Должность;

	Ячейка = ТаблицаВорд.Cell(1,3).Range;
	Ячейка.text = ФИОИнспектора;
	
	//Доверенность
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыПодвал_1;
	Ячейка 		= ТаблицаВорд.Cell(4,2).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьНомер;

	Ячейка 		= ТаблицаВорд.Cell(4,4).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьДата;

	Ячейка 		= ТаблицаВорд.Cell(4,6).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьМесяц;
	
	Ячейка 		= ТаблицаВорд.Cell(4,8).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьГод;
	
	//Паспорт инспектора   
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыПаспортСерияНомерДатаВыдачи;
	Ячейка 		= ТаблицаВорд.Cell(1,2).Range;
	Ячейка.text = ДанныеИнспектора.Серия;
	Ячейка 		= ТаблицаВорд.Cell(1,4).Range;
	Ячейка.text = ДанныеИнспектора.Номер;
	//дата выдачи паспорта
	Ячейка 		= ТаблицаВорд.Cell(1,6).Range;
	Ячейка.text = Формат(День(ДанныеИнспектора.ДатаВыдачи),"ЧЦ=2; ЧГ=0; ЧВН=");
	Ячейка 		= ТаблицаВорд.Cell(1,8).Range;
	Ячейка.text =  ПолучитьМесяцПрописью(ДанныеИнспектора.ДатаВыдачи);
	Ячейка 		= ТаблицаВорд.Cell(1,10).Range;
	Ячейка.text =   Формат(Год(ДанныеИнспектора.ДатаВыдачи),"ЧЦ=4; ЧГ=0; ЧВН=");

	//кем выдан паспорт
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыПаспортКемВыдан;
	Ячейка 		= ТаблицаВорд.Cell(1,2).Range;
	Ячейка.text =   ДанныеИнспектора.КемВыдан;
	
КонецПроцедуры // ЗаполнитьУведомлениеОЗаключениТрудовогоДоговора()

&НаКлиенте
Процедура ЗаполнитьСправкуПриЗаключениТрудовогоДоговора(ДанныеОбъекта,ДанныеИнспектора,ПечатнаяФорма)

	СтруктураТаблиц =  СтруктураТаблицПоЗаголовкам(ПечатнаяФорма);
	
	//Таблица_КонтактныйТелефонИсполнителя
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Справка;
	Ячейка = ТаблицаВорд.Cell(13,1).Range;
	Ячейка.text = СтрШаблон("%1 %2 %3, %4 года рождения, приём %5",
	                                  ДанныеОбъекта.Фамилия,
									  ДанныеОбъекта.Имя,
									  ДанныеОбъекта.Отчество,
									Формат(ДанныеОбъекта.ДатаРождения,"ДЛФ=Д"),
									Формат(ДанныеОбъекта.ДатаПриема,"ДЛФ=Д"));
	
КонецПроцедуры // ЗаполнитьУведомлениеОЗаключениТрудовогоДоговора()

&НаКлиенте
Процедура ЗаполнитьДополнительныйЛист(ДанныеОбъекта,ДанныеИнспектора,ПечатнаяФорма)

	СтруктураТаблиц =  СтруктураТаблицПоЗаголовкам(ПечатнаяФорма);
	
	//Фамилия
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Фамилия;
	ТекстВвода 		 = ДанныеОбъекта.Фамилия;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Фамилия"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);
	
	//Имя
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Имя;
	ТекстВвода 		 = ДанныеОбъекта.Имя;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Имя"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Отчество
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_Отчество;
	ТекстВвода 		 = ДанныеОбъекта.Отчество;
	НачальнаяКолонка = 2;
	Если ТаблицаВорд.Columns.Count - НачальнаяКолонка + 1 < СтрДлина(ТекстВвода) Тогда 
		ВызватьИсключение (НСтр("ru = 'Длина таблицы ""Отчество"" меньше текста ввода'"));
	КонецЕсли;
	ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка);

	//Данные Инспектора
	ФИОИнспектора =  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2.%3.",
				ДанныеИнспектора.Фамилия,
				Лев(ДанныеИнспектора.Имя,1),
				Лев(ДанныеИнспектора.Отчество,1));
				
				
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыДолжностьФамилия;
	
	Ячейка = ТаблицаВорд.Cell(1,1).Range;
	Ячейка.text = ДанныеИнспектора.Должность;

	Ячейка = ТаблицаВорд.Cell(1,3).Range;
	Ячейка.text = ФИОИнспектора;
	
	//Доверенность
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыПодвал_1;
	Ячейка 		= ТаблицаВорд.Cell(4,2).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьНомер;

	Ячейка 		= ТаблицаВорд.Cell(4,4).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьДата;

	Ячейка 		= ТаблицаВорд.Cell(4,6).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьМесяц;
	
	Ячейка 		= ТаблицаВорд.Cell(4,8).Range;
	Ячейка.text = ДанныеИнспектора.ДоверенностьГод;
	
	//Паспорт инспектора   
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыПаспортСерияНомерДатаВыдачи;
	Ячейка 		= ТаблицаВорд.Cell(1,2).Range;
	Ячейка.text = ДанныеИнспектора.Серия;
	Ячейка 		= ТаблицаВорд.Cell(1,4).Range;
	Ячейка.text = ДанныеИнспектора.Номер;
	//дата выдачи паспорта
	Ячейка 		= ТаблицаВорд.Cell(1,6).Range;
	Ячейка.text = Формат(День(ДанныеИнспектора.ДатаВыдачи),"ЧЦ=2; ЧГ=0; ЧВН=");
	Ячейка 		= ТаблицаВорд.Cell(1,8).Range;
	Ячейка.text =  ПолучитьМесяцПрописью(ДанныеИнспектора.ДатаВыдачи);
	Ячейка 		= ТаблицаВорд.Cell(1,10).Range;
	Ячейка.text =   Формат(Год(ДанныеИнспектора.ДатаВыдачи),"ЧЦ=4; ЧГ=0; ЧВН=");

	//кем выдан паспорт
	ТаблицаВорд 	 = СтруктураТаблиц.Таблица_КадрыПаспортКемВыдан;
	Ячейка 		= ТаблицаВорд.Cell(1,2).Range;
	Ячейка.text =   ДанныеИнспектора.КемВыдан;
	
КонецПроцедуры // ЗаполнитьУведомлениеОЗаключениТрудовогоДоговора()

#КонецОбласти

#Область ПолучениеДанных

&НаСервереБезКонтекста
Процедура ПроверкаНаПробелыНули(СтрокаТекста)

	МассивЗнаков = Новый Массив;
	Счетчик 		= 1;
	ДлинаСтроки 	= СтрДлина(СтрокаТекста);
	Пока Счетчик <= ДлинаСтроки Цикл
		
		МассивЗнаков.Добавить(Сред(СтрокаТекста,Счетчик,1));
		
		Счетчик 		= Счетчик + 1;
	КонецЦикла; 
	
	МассивЦифр = СтрРазделить("1,2,3,4,5,6,7,8,9",",");
	Для каждого Цифра Из МассивЦифр Цикл
	
		Если Не МассивЗнаков.Найти(Цифра) = Неопределено Тогда
		
			  Возврат
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	СтрокаТекста = "";

КонецПроцедуры // ПроверкаНаПробелыНули()

&НаСервере
Функция ПолучитьДанныеПечати(МассивДокументов) 

	Если Не ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина)
	КонецЕсли; 
	
	
	РезультатЗапросаПоВсемПечатаемымДокументам = ПолучитьДанныеДокументов(МассивДокументов);
		
	ВыборкаДетальныеЗаписи = РезультатЗапросаПоВсемПечатаемымДокументам.Выбрать();
	
	
	СоответствиеДанныеОбъектов = Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтруктураВозврата = Новый Структура;	
		Для каждого Колонка Из РезультатЗапросаПоВсемПечатаемымДокументам.Колонки Цикл
			СтруктураВозврата.Вставить(Колонка.Имя)
		КонецЦикла;
		
		ЗаполнитьЗначенияСвойств(СтруктураВозврата,ВыборкаДетальныеЗаписи);
		
		СоответствиеДанныеОбъектов.Вставить(ВыборкаДетальныеЗаписи.ФизическоеЛицо,СтруктураВозврата);
		
	
	КонецЦикла; 

		
	Возврат ПоместитьВоВременноеХранилище(Новый Структура("СоответствиеДанныеОбъектов, ДанныеИнспектораПоКадрам, МакетУведомления,МакетСправки,МакетДополнительныйЛист", 
					СоответствиеДанныеОбъектов,
					ДанныеИнспектораПоКадрам(),
					РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетУведомления"),
					РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетСправки"),
					РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетДополнительныйЛист")));

КонецФункции
				
&НаСервере
Функция ПолучитьДанныеДокументов(МассивДокументов)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов",МассивДокументов);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриемНаРаботу.Ссылка КАК Ссылка,
	|	ПриемНаРаботу.Организация КАК Организация,
	|	ПриемНаРаботу.Подразделение КАК Подразделение,
	|	ПриемНаРаботу.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПриемНаРаботу.ТрудовойДоговорНомер КАК ТрудовойДоговорНомер,
	|	ПриемНаРаботу.ТрудовойДоговорДата КАК ТрудовойДоговорДата,
	|	ПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора,
	|	ПриемНаРаботу.Должность КАК Должность,
	|	ПриемНаРаботу.ДатаПриема КАК ДатаПриема,
	|	0 КАК НомерСтроки,
	|	ПриемНаРаботу.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ДанныеДокументовПриемНаРаботу
	|ИЗ
	|	Документ.ПриемНаРаботу КАК ПриемНаРаботу
	|ГДЕ
	|	ПриемНаРаботу.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриемНаРаботуСписком.Ссылка,
	|	ПриемНаРаботуСписком.Организация,
	|	ПриемНаРаботуСпискомСотрудники.Подразделение,
	|	ПриемНаРаботуСпискомСотрудники.ФизическоеЛицо,
	|	ПриемНаРаботуСпискомСотрудники.ТрудовойДоговорНомер,
	|	ПриемНаРаботуСпискомСотрудники.ТрудовойДоговорДата,
	|	ПриемНаРаботуСпискомСотрудники.ДатаЗавершенияТрудовогоДоговора,
	|	ПриемНаРаботуСпискомСотрудники.Должность,
	|	ПриемНаРаботуСпискомСотрудники.ДатаПриема,
	|	ПриемНаРаботуСпискомСотрудники.НомерСтроки,
	|	ПриемНаРаботуСпискомСотрудники.Сотрудник
	|ИЗ
	|	Документ.ПриемНаРаботуСписком.Сотрудники КАК ПриемНаРаботуСпискомСотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриемНаРаботуСписком КАК ПриемНаРаботуСписком
	|		ПО ПриемНаРаботуСпискомСотрудники.Ссылка = ПриемНаРаботуСписком.Ссылка
	|ГДЕ
	|	ПриемНаРаботуСпискомСотрудники.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГражданствоФизическихЛицСрезПоследних.Страна КАК Страна,
	|	ГражданствоФизическихЛицСрезПоследних.ИНН КАК ИНН,
	|	СтраныМира.НаименованиеПолное КАК НаименованиеПолноеСтрана
	|ПОМЕСТИТЬ ВременнаяТаблица_Гражданство
	|ИЗ
	|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних КАК ГражданствоФизическихЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ГражданствоФизическихЛицСрезПоследних.Страна = СтраныМира.Ссылка
	|ГДЕ
	|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Монолит_ДанныеИностранца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Монолит_ДанныеИностранца.РазрешениеСерия КАК РазрешениеСерия,
	|	Монолит_ДанныеИностранца.РазрешениеНомер КАК РазрешениеНомер,
	|	Монолит_ДанныеИностранца.РазрешениеДатаВыдачи КАК РазрешениеДатаВыдачи,
	|	Монолит_ДанныеИностранца.РазрешениеДействительноДо КАК РазрешениеДействительноДо,
	|	Монолит_ДанныеИностранца.РазрешениеТерриторияДействия КАК РазрешениеТерриторияДействия,
	|	Монолит_ДанныеИностранца.РазрешениеКемВыдано КАК РазрешениеКемВыдано,
	|	Монолит_ДанныеИностранца.РазрешениеДатаПостановкиНаМиграционныйУчет КАК РазрешениеДатаПостановкиНаМиграционныйУчет,
	|	Монолит_ДанныеИностранца.РазрешениеКтоПоставилНаУчет КАК РазрешениеКтоПоставилНаУчет,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаСерия КАК МиграционнаяКартаСерия,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаНомер КАК МиграционнаяКартаНомер,
	|	Монолит_ДанныеИностранца.МиграционнаяКартаДатаВыдачи КАК МиграционнаяКартаДатаВыдачи,
	|	Монолит_ДанныеИностранца.ПатентСерия КАК ПатентСерия,
	|	Монолит_ДанныеИностранца.ПатентНомер КАК ПатентНомер,
	|	Монолит_ДанныеИностранца.ПатентДатаВыдачи КАК ПатентДатаВыдачи,
	|	Монолит_ДанныеИностранца.ПатентСрокС КАК ПатентСрокС,
	|	Монолит_ДанныеИностранца.ПатентСрокПо КАК ПатентСрокПо,
	|	Монолит_ДанныеИностранца.ПатентНаименование КАК ПатентНаименование,
	|	Монолит_ДанныеИностранца.ПатентКемВыдан КАК ПатентКемВыдан
	|ПОМЕСТИТЬ ВременнаяТаблица_РазрешенияПатенты
	|ИЗ
	|	РегистрСведений.Монолит_ДанныеИностранца КАК Монолит_ДанныеИностранца
	|ГДЕ
	|	Монолит_ДанныеИностранца.ФизическоеЛицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Монолит_УведомленияИностранцев.ПриказОрганизации КАК ПриказОрганизации,
	|	Монолит_УведомленияИностранцев.ГосударственнаяОрганизация КАК ГосударственнаяОрганизация,
	|	Монолит_УведомленияИностранцев.ДатаУведомления КАК ДатаУведомления
	|ПОМЕСТИТЬ ВременнаяТаблица_Уведомления
	|ИЗ
	|	РегистрСведений.Монолит_УведомленияИностранцев КАК Монолит_УведомленияИностранцев
	|ГДЕ
	|	Монолит_УведомленияИностранцев.ПриказОрганизации В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК Ссылка,
	|	ФизическиеЛица.МестоРождения КАК МестоРождения,
	|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
	|	ФизическиеЛица.Пол КАК Пол,
	|	ФизическиеЛица.ДатаРегистрации КАК ДатаРегистрации,
	|	ФизическиеЛица.ФИО КАК ФИО,
	|	ФизическиеЛица.Фамилия КАК Фамилия,
	|	ФизическиеЛица.Имя КАК Имя,
	|	ФизическиеЛица.Отчество КАК Отчество
	|ПОМЕСТИТЬ ВременнаяТаблица_ДанныеФизическогоЛица
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	|	ПРЕДСТАВЛЕНИЕ(ДокументыФизическихЛицСрезПоследних.ВидДокумента) КАК ВидДокумента,
	|	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	|	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	|	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	|	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	|	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	|	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения
	|ПОМЕСТИТЬ ВременнаяТаблица_ДокументыФизичесткогоЛица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних КАК ДокументыФизическихЛицСрезПоследних
	|ГДЕ
	|	ДокументыФизическихЛицСрезПоследних.Физлицо В
	|			(ВЫБРАТЬ
	|				ДанныеДокументовПриемНаРаботу.ФизическоеЛицо
	|			ИЗ
	|				ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу)
	|	И ДокументыФизическихЛицСрезПоследних.ЯвляетсяДокументомУдостоверяющимЛичность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументовПриемНаРаботу.Ссылка КАК Ссылка,
	|	ДанныеДокументовПриемНаРаботу.Организация КАК Организация,
	|	ДанныеДокументовПриемНаРаботу.Подразделение КАК Подразделение,
	|	ДанныеДокументовПриемНаРаботу.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеДокументовПриемНаРаботу.ТрудовойДоговорНомер КАК ТрудовойДоговорНомер,
	|	ДанныеДокументовПриемНаРаботу.ТрудовойДоговорДата КАК ТрудовойДоговорДата,
	|	ДанныеДокументовПриемНаРаботу.ДатаЗавершенияТрудовогоДоговора КАК ДатаЗавершенияТрудовогоДоговора,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокументовПриемНаРаботу.Должность) КАК Должность,
	|	ДанныеДокументовПриемНаРаботу.ДатаПриема КАК ДатаПриема,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Фамилия КАК Фамилия,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Имя КАК Имя,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Отчество КАК Отчество,
	|	ВременнаяТаблица_Гражданство.Страна КАК Страна,
	|	ВременнаяТаблица_Гражданство.НаименованиеПолноеСтрана КАК Гражданство,
	|	ВременнаяТаблица_Гражданство.ИНН КАК ИННГражданство,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеСерия КАК РазрешениеСерия,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеНомер КАК РазрешениеНомер,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеДатаВыдачи КАК РазрешениеДатаВыдачи,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеДействительноДо КАК РазрешениеДействительноДо,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеТерриторияДействия КАК РазрешениеТерриторияДействия,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеКемВыдано КАК РазрешениеКемВыдано,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеДатаПостановкиНаМиграционныйУчет КАК РазрешениеДатаПостановкиНаМиграционныйУчет,
	|	ВременнаяТаблица_РазрешенияПатенты.РазрешениеКтоПоставилНаУчет КАК РазрешениеКтоПоставилНаУчет,
	|	ВременнаяТаблица_РазрешенияПатенты.МиграционнаяКартаСерия КАК МиграционнаяКартаСерия,
	|	ВременнаяТаблица_РазрешенияПатенты.МиграционнаяКартаНомер КАК МиграционнаяКартаНомер,
	|	ВременнаяТаблица_РазрешенияПатенты.МиграционнаяКартаДатаВыдачи КАК МиграционнаяКартаДатаВыдачи,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентСерия КАК ПатентСерия,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентНомер КАК ПатентНомер,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентДатаВыдачи КАК ПатентДатаВыдачи,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентСрокС КАК ПатентСрокС,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентСрокПо КАК ПатентСрокПо,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентНаименование КАК ПатентНаименование,
	|	ВременнаяТаблица_РазрешенияПатенты.ПатентКемВыдан КАК ПатентКемВыдан,
	|	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблица_Уведомления.ГосударственнаяОрганизация) КАК ОрганВласти,
	|	ВременнаяТаблица_Уведомления.ДатаУведомления КАК ДатаУведомления,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.МестоРождения КАК МестоРождения,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.ДатаРождения КАК ДатаРождения,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.Мужской) КАК ПолМужской,
	|	ВременнаяТаблица_ДанныеФизическогоЛица.ДатаРегистрации КАК ДатаРегистрации,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.ВидДокумента КАК ВидДокумента,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.Серия КАК Серия,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.Номер КАК Номер,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.ДатаВыдачи КАК ДатаВыдачи,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.СрокДействия КАК СрокДействия,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.КемВыдан КАК КемВыдан,
	|	ВременнаяТаблица_ДокументыФизичесткогоЛица.КодПодразделения КАК КодПодразделения
	|ИЗ
	|	ДанныеДокументовПриемНаРаботу КАК ДанныеДокументовПриемНаРаботу
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_Гражданство КАК ВременнаяТаблица_Гражданство
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_Гражданство.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_РазрешенияПатенты КАК ВременнаяТаблица_РазрешенияПатенты
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_РазрешенияПатенты.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_Уведомления КАК ВременнаяТаблица_Уведомления
	|		ПО ДанныеДокументовПриемНаРаботу.Ссылка = ВременнаяТаблица_Уведомления.ПриказОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ДанныеФизическогоЛица КАК ВременнаяТаблица_ДанныеФизическогоЛица
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_ДанныеФизическогоЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблица_ДокументыФизичесткогоЛица КАК ВременнаяТаблица_ДокументыФизичесткогоЛица
	|		ПО ДанныеДокументовПриемНаРаботу.ФизическоеЛицо = ВременнаяТаблица_ДокументыФизичесткогоЛица.Физлицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДанныеДокументовПриемНаРаботу.НомерСтроки";


	Возврат Запрос.Выполнить();


КонецФункции 
 
&НаСервереБезКонтекста
Функция ДанныеИнспектораПоКадрам()

	  Запрос = Новый Запрос;
	  Запрос.УстановитьПараметр("Пользователь",Пользователи.ТекущийПользователь());
	  Запрос.УстановитьПараметр("ВидДокумента",Справочники.ВидыДокументовФизическихЛиц.ПаспортРФ);
	  Запрос.УстановитьПараметр("Организация",Справочники.Монолит_ЗначенияСсылокСправочников.ОрганизацияМонолитстрой.ЗначениеСсылки);
	  
	  Запрос.Текст = "ВЫБРАТЬ
	  |	Пользователи.Ссылка КАК Ссылка,
	  |	Пользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |ПОМЕСТИТЬ ВременнаяТаблицаСправочникПользователи
	  |ИЗ
	  |	Справочник.Пользователи КАК Пользователи
	  |ГДЕ
	  |	Пользователи.Ссылка = &Пользователь
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ФизическоеЛицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ФизическиеЛица.Ссылка КАК Ссылка,
	  |	ФизическиеЛица.Фамилия КАК Фамилия,
	  |	ФизическиеЛица.Имя КАК Имя,
	  |	ФизическиеЛица.Отчество КАК Отчество,
	  |	ФизическиеЛица.ФИО КАК ФИО
	  |ПОМЕСТИТЬ ВременнаяТаблицаДанныеФизЛица
	  |ИЗ
	  |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	  |ГДЕ
	  |	ФизическиеЛица.Ссылка В
	  |			(ВЫБРАТЬ
	  |				ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |			ИЗ
	  |				ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	ФизическиеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона,
	  |	ФизическиеЛицаКонтактнаяИнформация.Ссылка КАК Ссылка
	  |ПОМЕСТИТЬ ВременнаяТаблицаКонтактныйТелефон
	  |ИЗ
	  |	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	  |ГДЕ
	  |	ФизическиеЛицаКонтактнаяИнформация.Ссылка В
	  |			(ВЫБРАТЬ
	  |				ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |			ИЗ
	  |				ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Ссылка
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
	  |	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
	  |	ДокументыФизическихЛицСрезПоследних.Серия КАК Серия,
	  |	ДокументыФизическихЛицСрезПоследних.Номер КАК Номер,
	  |	ДокументыФизическихЛицСрезПоследних.ДатаВыдачи КАК ДатаВыдачи,
	  |	ДокументыФизическихЛицСрезПоследних.СрокДействия КАК СрокДействия,
	  |	ДокументыФизическихЛицСрезПоследних.КемВыдан КАК КемВыдан,
	  |	ДокументыФизическихЛицСрезПоследних.КодПодразделения КАК КодПодразделения,
	  |	ДокументыФизическихЛицСрезПоследних.Представление КАК Представление
	  |ПОМЕСТИТЬ ВременнаяТаблицаДокументыФизическогоЛица
	  |ИЗ
	  |	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
	  |			,
	  |			(ВидДокумента, Физлицо) В
	  |				(ВЫБРАТЬ
	  |					&ВидДокумента КАК ВидДокумента,
	  |					ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо
	  |				ИЗ
	  |					ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)) КАК ДокументыФизическихЛицСрезПоследних
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	Физлицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ ПЕРВЫЕ 1
	  |	КадроваяИсторияСотрудниковСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	  |	КадроваяИсторияСотрудниковСрезПоследних.Должность КАК Должность
	  |ПОМЕСТИТЬ ВременнаяТаблицаКадроваяИстория
	  |ИЗ
	  |	РегистрСведений.КадроваяИсторияСотрудников.СрезПоследних(
	  |			,
	  |			(ФизическоеЛицо, ГоловнаяОрганизация) В
	  |				(ВЫБРАТЬ
	  |					ВременнаяТаблицаСправочникПользователи.ФизическоеЛицо КАК ФизическоеЛицо,
	  |					&Организация КАК Организация
	  |				ИЗ
	  |					ВременнаяТаблицаСправочникПользователи КАК ВременнаяТаблицаСправочникПользователи)) КАК КадроваяИсторияСотрудниковСрезПоследних
	  |
	  |ИНДЕКСИРОВАТЬ ПО
	  |	ФизическоеЛицо
	  |;
	  |
	  |////////////////////////////////////////////////////////////////////////////////
	  |ВЫБРАТЬ
	  |	ВременнаяТаблицаДанныеФизЛица.Фамилия КАК Фамилия,
	  |	ВременнаяТаблицаДанныеФизЛица.Имя КАК Имя,
	  |	ВременнаяТаблицаДанныеФизЛица.Отчество КАК Отчество,
	  |	ВременнаяТаблицаДанныеФизЛица.ФИО КАК ФИО,
	  |	ВременнаяТаблицаКонтактныйТелефон.НомерТелефона КАК НомерТелефона,
	  |	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаДокументыФизическогоЛица.ВидДокумента) КАК ВидДокумента,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Серия КАК Серия,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Номер КАК Номер,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.ДатаВыдачи КАК ДатаВыдачи,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.СрокДействия КАК СрокДействия,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.КемВыдан КАК КемВыдан,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.КодПодразделения КАК КодПодразделения,
	  |	ВременнаяТаблицаДокументыФизическогоЛица.Представление КАК ПредставлениеДокумента,
	  |	ПРЕДСТАВЛЕНИЕ(ВременнаяТаблицаКадроваяИстория.Должность) КАК Должность
	  |ИЗ
	  |	ВременнаяТаблицаДанныеФизЛица КАК ВременнаяТаблицаДанныеФизЛица
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКонтактныйТелефон КАК ВременнаяТаблицаКонтактныйТелефон
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаКонтактныйТелефон.Ссылка
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаДокументыФизическогоЛица КАК ВременнаяТаблицаДокументыФизическогоЛица
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаДокументыФизическогоЛица.Физлицо
	  |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаКадроваяИстория КАК ВременнаяТаблицаКадроваяИстория
	  |		ПО ВременнаяТаблицаДанныеФизЛица.Ссылка = ВременнаяТаблицаКадроваяИстория.ФизическоеЛицо";
	  
	  Результат = Запрос.Выполнить();
	  Выборка =  Результат.Выбрать();

	  СтруктураВозврата = Новый Структура;	
	  Для каждого Колонка Из Результат.Колонки Цикл
		  СтруктураВозврата.Вставить(Колонка.Имя)
	  КонецЦикла;

	  Если Выборка.Следующий() Тогда 
		 		  
		  ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	  Иначе
		  Для каждого КлючИЗначение Из СтруктураВозврата Цикл
		  	    КлючИЗначение.Значение = ""
		  КонецЦикла; 
		  
	  КонецЕсли; 
	  
	  
	  //Данных по доверенности в базе не наю откуда брать
	  СтруктураВозврата.Вставить("ДоверенностьНомер","");
	  СтруктураВозврата.Вставить("ДоверенностьДата","");
	  СтруктураВозврата.Вставить("ДоверенностьМесяц","");
	  СтруктураВозврата.Вставить("ДоверенностьГод","");
	  
	  // № 6 от 18 июня 2018
	  Если СтруктураВозврата.Фамилия = "Гарова" Тогда
		  СтруктураВозврата.ДоверенностьНомер = "6";
		  СтруктураВозврата.ДоверенностьДата = "18";
		  СтруктураВозврата.ДоверенностьМесяц = "июня";
		  СтруктураВозврата.ДоверенностьГод = "18";
	  КонецЕсли; 
	  Если СтруктураВозврата.Фамилия = "Ященко" Тогда
		  СтруктураВозврата.ДоверенностьНомер = "5";
		  СтруктураВозврата.ДоверенностьДата = "10";
		  СтруктураВозврата.ДоверенностьМесяц = "января";
		  СтруктураВозврата.ДоверенностьГод = "17";
	  КонецЕсли; 
	  
	   
//у Розолинского пустое поле
//у Ященко № 5 от 10.01.2017 г.
//у Гаровой № 6 от 18.06.2018 г.

	  Возврат СтруктураВозврата;
	  

КонецФункции // ПолучитьДанныеПользователя()

#КонецОбласти

#Область СлужебныеПроцедуры

&НаКлиенте
Функция ПолучитьМесяцПрописью(ЗначениеДата)
	
	Если Не ТипЗнч(ЗначениеДата) = Тип("Дата") Тогда
		Возврат ""
	КонецЕсли; 
	
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(1,"января");
	Соответствие.Вставить(2,"февраля");
	Соответствие.Вставить(3,"марта");
	Соответствие.Вставить(4,"апреля");
	Соответствие.Вставить(5,"мая");
	Соответствие.Вставить(6,"июня");
	Соответствие.Вставить(7,"июля");
	Соответствие.Вставить(8,"августа");
	Соответствие.Вставить(9,"сентября");
	Соответствие.Вставить(10,"октября");
	Соответствие.Вставить(11,"ноября");
	Соответствие.Вставить(12,"декабря");

	Возврат Соответствие[Месяц(ЗначениеДата)];	

КонецФункции // ПолучитьМесяцПрописью()

&НаКлиенте
Процедура ЗаполнитьТаблицуТекстом(ТаблицаВорд,ТекстВвода,НачальнаяКолонка,НомерСтроки = 1)
	Если Не ТипЗнч(ТекстВвода) = Тип("Строка") Тогда
		Возврат 
	КонецЕсли; 

	Если ПустаяСтрока(ТекстВвода) Тогда
		Возврат
	КонецЕсли; 

	Счетчик 		= 1;
	ДлинаСтроки 	= СтрДлина(ТекстВвода);
	КолонкаТаблицы 	= НачальнаяКолонка;
	ПоследняяКолонка = ТаблицаВорд.Columns.Count;
	
	Пока Счетчик <= ДлинаСтроки Цикл
		
		Если КолонкаТаблицы > ПоследняяКолонка Тогда
			Прервать;
		КонецЕсли;

		Ячейка = ТаблицаВорд.Cell(НомерСтроки,КолонкаТаблицы).Range;
		Ячейка.text = ВРег(Сред(ТекстВвода,Счетчик,1));
		
		КолонкаТаблицы = КолонкаТаблицы + 1;
		Счетчик		   = Счетчик + 1;
			
	КонецЦикла; 
	

КонецПроцедуры // ЗаполнитьТаблицуТекстом()

&НаКлиенте
Функция СтруктураТаблицПоЗаголовкам(ПечатнаяФорма)
	
	СтруктураТаблиц = Новый Структура;
	
	Для каждого Таблица Из ПечатнаяФорма.Tables Цикл
		
		Если ПустаяСтрока(Таблица.Title) Тогда
			Продолжить;
		КонецЕсли; 
		
		СтруктураТаблиц.Вставить(Таблица.Title,Таблица);
		
		
	КонецЦикла;
	
	Возврат СтруктураТаблиц;

КонецФункции // СтруктураТаблицПоЗаголовкам()

&НаКлиенте
Функция ПреобразоватьДатуВСтрокуВвода(ЗначениеДата)
	
	Если ЗначениеДата = '00010101' Тогда
		Возврат ""
	КонецЕсли; 
	
	Если Не ТипЗнч(ЗначениеДата) = Тип("Дата") Тогда
		Возврат ""
	КонецЕсли; 
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1 %2 %3",
			   Формат(День(ЗначениеДата),"ЧЦ=2; ЧГ=0; ЧВН="),
			   Формат(Месяц(ЗначениеДата),"ЧЦ=2; ЧГ=0; ЧВН="),
			   Формат(Год(ЗначениеДата),"ЧЦ=4; ЧГ=0; ЧВН="));
	
КонецФункции // ПреобразоватьДату()
	
#КонецОбласти 

#Область ТестМакета

&НаКлиенте
Процедура ПрочитатьТаблицы(Команда)
	
	ОбъектWORD = Новый COMОбъект("Word.Application");
	
	ИмяВременногоФайла_Word = ПолучитьИмяВременногоФайла(".doсx");
	
	ПолучитьМакет().Записать(ИмяВременногоФайла_Word); //Двоичные данные
	
	ПечатнаяФорма = ОбъектWORD.Documents.Open(ИмяВременногоФайла_Word);
	
	ПечатнаяФорма.Activate();
	
	Для каждого Таблица Из ПечатнаяФорма.Tables Цикл
		
		Если ПустаяСтрока(Таблица.Title) Тогда
			Продолжить;
		КонецЕсли; 
		
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = Таблица.Title;
		СообщениеПользователю.Сообщить();
		
		
	КонецЦикла;
	
	ОбъектWORD.Quit();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет()

	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетУведомления")

КонецФункции // ПолучитьМакет()

&НаКлиенте
Процедура Тест(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	
	Печать("ПФ_MXL_УведомлениеЗаключенииТрудовогоДоговора",ОбъектыНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура Справка(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	
	Печать("ПФ_MXL_СправкаПриТрудовогоДоговора",ОбъектыНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныйЛист(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	
	Печать("ПФ_MXL_ДополнительныйЛист",ОбъектыНазначения);

КонецПроцедуры

&НаКлиенте
Процедура Пакет(Команда)
	
	ОбъектыНазначения = Новый Массив;
	Для каждого ТекЭлементСписка Из МассивОбъектов Цикл
		ОбъектыНазначения.Добавить(ТекЭлементСписка.Значение);
	КонецЦикла; 
	
	Печать("ПФ_MXL_УведомлениеЗаключенииТрудовогоДоговораПакет",ОбъектыНазначения);

КонецПроцедуры


#КонецОбласти 



